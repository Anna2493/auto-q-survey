[{"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\index.js":"1","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\App.js":"2","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\reportWebVitals.js":"3","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\Context.js":"4","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\pages\\HomePage.js":"5","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\pages\\Registration.js":"6","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\BackendFunctions.js":"7","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Home.js":"8","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Navbar\\Navbar.js":"9","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Navbar\\MenuItems.js":"10","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\index.js":"11","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\reportWebVitals.js":"12","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\App.js":"13","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\Context.js":"14","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\pages\\HomePage.js":"15","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\pages\\Registration.js":"16","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\BackendFunctions.js":"17","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Home.js":"18","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Navbar\\Navbar.js":"19","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Navbar\\MenuItems.js":"20","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\index.js":"21","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\reportWebVitals.js":"22","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\App.js":"23","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\Context.js":"24","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Registration.js":"25","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\HomePage.js":"26","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\BackendFunctions.js":"27","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Home.js":"28","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Navbar\\Navbar.js":"29","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Navbar\\MenuItems.js":"30","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Profile.js":"31","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step1.js":"32","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step2.js":"33","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step3.js":"34","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\ManuallStatements.js":"35","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\UploadStatements.js":"36","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step4.js":"37","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Finish.js":"38","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\AuthApi.js":"39","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step1.js":"40","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step2.js":"41","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Home.js":"42","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step3.js":"43","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4.js":"44","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4_test.js":"45","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4_Second.js":"46","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Admin_Home.js":"47"},{"size":500,"mtime":499162500000,"results":"48","hashOfConfig":"49"},{"size":719,"mtime":1610380114771,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"49"},{"size":716,"mtime":1610380070338,"results":"52","hashOfConfig":"49"},{"size":733,"mtime":1610380099520,"results":"53","hashOfConfig":"49"},{"size":4921,"mtime":1610390290916,"results":"54","hashOfConfig":"49"},{"size":2447,"mtime":1610382356066,"results":"55","hashOfConfig":"49"},{"size":7433,"mtime":1610380088021,"results":"56","hashOfConfig":"49"},{"size":1386,"mtime":1610380088035,"results":"57","hashOfConfig":"49"},{"size":421,"mtime":1610380088033,"results":"58","hashOfConfig":"49"},{"size":517,"mtime":1610738100114,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1610738100125,"results":"61","hashOfConfig":"60"},{"size":750,"mtime":1610738100082,"results":"62","hashOfConfig":"60"},{"size":716,"mtime":1610738100091,"results":"63","hashOfConfig":"60"},{"size":733,"mtime":1610738100119,"results":"64","hashOfConfig":"60"},{"size":4966,"mtime":1610741951069,"results":"65","hashOfConfig":"60"},{"size":2447,"mtime":1610738100088,"results":"66","hashOfConfig":"60"},{"size":7428,"mtime":1610741667573,"results":"67","hashOfConfig":"60"},{"size":1386,"mtime":1610738100108,"results":"68","hashOfConfig":"60"},{"size":421,"mtime":1610738100102,"results":"69","hashOfConfig":"60"},{"size":517,"mtime":1612705618502,"results":"70","hashOfConfig":"71"},{"size":375,"mtime":1610747832618,"results":"72","hashOfConfig":"71"},{"size":5693,"mtime":1614014294239,"results":"73","hashOfConfig":"71"},{"size":716,"mtime":1612369136454,"results":"74","hashOfConfig":"71"},{"size":7251,"mtime":1614020795768,"results":"75","hashOfConfig":"71"},{"size":733,"mtime":1610747832617,"results":"76","hashOfConfig":"71"},{"size":5601,"mtime":1612352871467,"results":"77","hashOfConfig":"71"},{"size":3170,"mtime":1614016456545,"results":"78","hashOfConfig":"71"},{"size":1408,"mtime":1614001725724,"results":"79","hashOfConfig":"71"},{"size":421,"mtime":1610747832615,"results":"80","hashOfConfig":"71"},{"size":3475,"mtime":1614013336969,"results":"81","hashOfConfig":"71"},{"size":7198,"mtime":1614022920826,"results":"82","hashOfConfig":"71"},{"size":15271,"mtime":1614026307171,"results":"83","hashOfConfig":"71"},{"size":3276,"mtime":1614026597063,"results":"84","hashOfConfig":"71"},{"size":4642,"mtime":1612345645357,"results":"85","hashOfConfig":"71"},{"size":4277,"mtime":1612345651140,"results":"86","hashOfConfig":"71"},{"size":4544,"mtime":1612356861084,"results":"87","hashOfConfig":"71"},{"size":2108,"mtime":1612358058767,"results":"88","hashOfConfig":"71"},{"size":91,"mtime":1612709361690,"results":"89","hashOfConfig":"71"},{"size":3396,"mtime":1612859412707,"results":"90","hashOfConfig":"71"},{"size":3029,"mtime":1612862725286,"results":"91","hashOfConfig":"71"},{"size":3265,"mtime":1612857989634,"results":"92","hashOfConfig":"71"},{"size":19509,"mtime":1613744378247,"results":"93","hashOfConfig":"71"},{"size":29301,"mtime":1613744241214,"results":"94","hashOfConfig":"71"},{"size":14177,"mtime":1613989054876,"results":"95","hashOfConfig":"71"},{"size":25273,"mtime":1613994131669,"results":"96","hashOfConfig":"71"},{"size":4064,"mtime":1614019083085,"results":"97","hashOfConfig":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"cfiil5",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"efxg96",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"1ras0i8",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"145"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"145"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"145"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"145"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"145"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"145"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"145"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"200","usedDeprecatedRules":"145"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"203","usedDeprecatedRules":"145"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":3,"source":"206","usedDeprecatedRules":"145"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\index.js",[],["209","210"],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\App.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\reportWebVitals.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\Context.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\pages\\HomePage.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\pages\\Registration.js",["211"],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\BackendFunctions.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Home.js",["212"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../styles/HomeGrid.css';\r\nimport { Input } from '@material-ui/core';\r\nimport { login } from '../BackendFunctions';\r\nimport Navbar from './Navbar/Navbar';\r\n\r\n\r\nexport default class HomeGrid2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n\r\n      this.onChange = this.onChange.bind(this);\r\n      this.signin = this.signin.bind(this)\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    }\r\n    \r\n    signin(e) {\r\n        e.preventDefault()\r\n\r\n        const admin = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        login(admin).then(res => {\r\n            if (res) {\r\n               // this.props.history.push(`/profile`)\r\n              this.setState({ Redirect: true });\r\n                //TODO apply redirect to profile if no errors\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n  render() {\r\n\r\n    if (this.state.Redirect) {\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/profile',\r\n        }}/>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        \r\n        {/* <div className=\"headerContainer\">\r\n           <div>\r\n            <h1 className=\"sub-heading\">\r\n              Build Q-methodology research survey with autoQsurvey\r\n            </h1>\r\n\r\n            <ul className=\"sub-list\">\r\n              <li>Collaborate with fellow researchers</li>\r\n              <li>Interactive survey design system</li>\r\n              <li>Upload Q-sort statement cards from file</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid\">\r\n          \r\n\r\n          <div className=\"item2 register-container\">\r\n            <h2 className=\"heading-two\">Create an account</h2>\r\n\r\n            <p className=\"sub-paragraph\">\r\n              Register with few clicks and discover full potential of\r\n              autoQsurvey\r\n            </p>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/register\"}>\r\n                <button className=\"register-btn\">SING UP</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item3 sign-in-container\">\r\n            <h2 className=\"heading-two\">Sign in</h2>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/profile\"}>\r\n                <button className=\"log-in-btn\" onClick={this.signin}>\r\n                  SIGN IN\r\n                </button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Reset password</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item4 participant-container\">\r\n            <h2 className=\"heading-two\">Participant corner</h2>\r\n\r\n            <div className=\"center\">\r\n              <input className=\"inputBox\" placeholder=\"Code\"></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"log-in-btn\">START SURVEY</button>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Manage my data</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item5 quick-survey-container\">\r\n            <h2 className=\"heading-two\">Quick survey</h2>\r\n\r\n            <p className=\"sub-paragraph\">\r\n              Create and manage your survey without the account\r\n            </p>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/Create1Name\"}>\r\n                <button className=\"log-in-btn\">NEW SURVEY</button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"log-in-btn\">LOG IN SURVEY</button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className='grid-container'>\r\n\r\n          <div className=\"item1 header-container\">\r\n            <h1 className=\"heading\">\r\n              Build Q-methodology research survey\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=' item6 navbar-container'>\r\n            <Navbar/>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n        <div className='grid-container2'>\r\n          \r\n          <div className=\"item2 sub-container\">\r\n            <h2 className=\"heading-two\">Create an account</h2>\r\n            <p className=\"sub-paragraph\">\r\n                Register with few clicks and discover full potential of\r\n                autoQsurvey\r\n            </p>\r\n              \r\n            <div className=\"btn-container\">\r\n              <div className='btn-center'>\r\n                <Link to={\"/register\"}>\r\n                <button className=\"btn\">SING UP</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          \r\n          <div className=\"item3 sub-container\">\r\n            <h2 className=\"heading-two\">Sign in</h2>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"btn-container\">\r\n               <div className='btn-center'>\r\n              <Link to={\"/profile\"}>\r\n                <button className=\"btn\" onClick={this.signin}>\r\n                  SIGN IN\r\n                </button>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Reset password</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item4 sub-container\">\r\n            <h2 className=\"heading-two\">Participant</h2>\r\n\r\n            <div className=\"center\">\r\n              <input className=\"inputBox\" placeholder=\"Code\"></input>\r\n            </div>\r\n\r\n            <div className=\"btn-container\">\r\n              <div className=\"center\">\r\n                <button className=\"btn\">START SURVEY</button>\r\n                </div>\r\n            </div>\r\n \r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Manage my data</button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\1Uni\\4th year\\Honours\\workspace3\\client\\src\\components\\Navbar\\MenuItems.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\index.js",[],["213","214"],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\reportWebVitals.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\App.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\Context.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\pages\\HomePage.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\pages\\Registration.js",["215"],"import React from 'react';\r\nimport { register } from '../BackendFunctions';\r\n\r\nexport default class Registration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            first_name: '',\r\n            surname: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // fetch(\"http://localhost:5000/api/register\", {\r\n\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         first_name: this.state.first_name,\r\n        //         surname: this.state.surname,\r\n        //         email: this.state.email,\r\n        //         password: this.state.password,\r\n        //     })\r\n        // })\r\n        // .then(response => {\r\n        //     console.log(response)\r\n        // });\r\n        \r\n    // fetch('admins/register', {\r\n\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //         first_name: this.state.first_name,\r\n    //         surname: this.state.surname,\r\n    //         email: this.state.email,\r\n    //         password: this.state.password,\r\n    //     })\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log(response)\r\n    //     })\r\n\r\n\r\n        // register(newAdmin)\r\n        //     .then(response => {\r\n        //        // this.props.history.push(`/`)\r\n        //         console.log(response)\r\n        //     })\r\n        \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='container'>\r\n                    <h1 className='heading-white'>Create account</h1>\r\n\r\n                    <form className='center'>\r\n                        <div>\r\n                            <div>\r\n                                <label className='label'>First Name</label>\r\n                                <input\r\n                                    className='center name-input'\r\n                                    type='text'\r\n                                    name='first_name'\r\n                                    value={this.state.first_name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className='label'>Surname</label>\r\n                                <input\r\n                                    className='center name-input'\r\n                                    type='text'\r\n                                    name='surname'\r\n                                    value={this.state.surname}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className='label'>Email</label>\r\n                                <input\r\n                                    className='center name-input'\r\n                                    type='email'\r\n                                    name='email'\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className='label'>Password</label>\r\n                                <input\r\n                                    className='center name-input'\r\n                                    type='password'\r\n                                    name='password'\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className='label'>Confirm Password</label>\r\n                                <input\r\n                                    className='center name-input'\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button className='register-btn'\r\n                                    onClick={this.onSubmit}>\r\n                                REGISTER\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\BackendFunctions.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Home.js",["216"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../styles/HomeGrid.css';\r\nimport { Input } from '@material-ui/core';\r\nimport { login } from '../BackendFunctions';\r\nimport Navbar from './Navbar/Navbar';\r\n\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n\r\n      this.onChange = this.onChange.bind(this);\r\n      this.signin = this.signin.bind(this)\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    }\r\n    \r\n    signin(e) {\r\n        e.preventDefault()\r\n\r\n        const admin = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        login(admin).then(res => {\r\n            if (res) {\r\n               // this.props.history.push(`/profile`)\r\n              this.setState({ Redirect: true });\r\n                //TODO apply redirect to profile if no errors\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n  render() {\r\n\r\n    if (this.state.Redirect) {\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/profile',\r\n        }}/>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        \r\n        {/* <div className=\"headerContainer\">\r\n           <div>\r\n            <h1 className=\"sub-heading\">\r\n              Build Q-methodology research survey with autoQsurvey\r\n            </h1>\r\n\r\n            <ul className=\"sub-list\">\r\n              <li>Collaborate with fellow researchers</li>\r\n              <li>Interactive survey design system</li>\r\n              <li>Upload Q-sort statement cards from file</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid\">\r\n          \r\n\r\n          <div className=\"item2 register-container\">\r\n            <h2 className=\"heading-two\">Create an account</h2>\r\n\r\n            <p className=\"sub-paragraph\">\r\n              Register with few clicks and discover full potential of\r\n              autoQsurvey\r\n            </p>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/register\"}>\r\n                <button className=\"register-btn\">SING UP</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item3 sign-in-container\">\r\n            <h2 className=\"heading-two\">Sign in</h2>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/profile\"}>\r\n                <button className=\"log-in-btn\" onClick={this.signin}>\r\n                  SIGN IN\r\n                </button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Reset password</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item4 participant-container\">\r\n            <h2 className=\"heading-two\">Participant corner</h2>\r\n\r\n            <div className=\"center\">\r\n              <input className=\"inputBox\" placeholder=\"Code\"></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"log-in-btn\">START SURVEY</button>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Manage my data</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item5 quick-survey-container\">\r\n            <h2 className=\"heading-two\">Quick survey</h2>\r\n\r\n            <p className=\"sub-paragraph\">\r\n              Create and manage your survey without the account\r\n            </p>\r\n\r\n            <div className=\"center\">\r\n              <Link to={\"/Create1Name\"}>\r\n                <button className=\"log-in-btn\">NEW SURVEY</button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"log-in-btn\">LOG IN SURVEY</button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className='grid-container'>\r\n\r\n          <div className=\"item1 header-container\">\r\n            <h1 className=\"heading\">\r\n              Build Q-methodology research survey\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=' item6 navbar-container'>\r\n            <Navbar/>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n        <div className='grid-container2'>\r\n          \r\n          <div className=\"item2 sub-container\">\r\n            <h2 className=\"heading-two\">Create an account</h2>\r\n            <p className=\"sub-paragraph\">\r\n                Register with few clicks and discover full potential of\r\n                autoQsurvey\r\n            </p>\r\n              \r\n            <div className=\"btn-container\">\r\n              <div className='btn-center'>\r\n                <Link to={\"/register\"}>\r\n                <button className=\"btn\">SING UP</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          \r\n          <div className=\"item3 sub-container\">\r\n            <h2 className=\"heading-two\">Sign in</h2>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"btn-container\">\r\n               <div className='btn-center'>\r\n              <Link to={\"/profile\"}>\r\n                <button className=\"btn\" onClick={this.signin}>\r\n                  SIGN IN\r\n                </button>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Reset password</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item4 sub-container\">\r\n            <h2 className=\"heading-two\">Participant</h2>\r\n\r\n            <div className=\"center\">\r\n              <input className=\"inputBox\" placeholder=\"Code\"></input>\r\n            </div>\r\n\r\n            <div className=\"btn-container\">\r\n              <div className=\"center\">\r\n                <button className=\"btn\">START SURVEY</button>\r\n                </div>\r\n            </div>\r\n \r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Manage my data</button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\1Uni\\4th year\\Honours\\workspace4\\client\\src\\components\\Navbar\\MenuItems.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\index.js",[],["217","218"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\reportWebVitals.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\App.js",["219","220","221"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\Context.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Registration.js",["222","223"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\HomePage.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\BackendFunctions.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Home.js",["224","225"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\components\\Navbar\\MenuItems.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Profile.js",["226"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step1.js",["227","228"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step2.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step3.js",["248","249","250","251"],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\ManuallStatements.js",["252","253","254","255"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport { createStatement } from '../BackendFunctions';\r\n\r\nexport default class ManuallStatements extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            totalCards: '',\r\n            surveyID: '',\r\n            statementCards: [],\r\n            card: [{}],\r\n            statements: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateStatementCards();\r\n        this.setState({ surveyID: localStorage.getItem('SURVEY_ID') });\r\n    };\r\n\r\n    generateStatementCards() {\r\n        this.setState({ totalCards: localStorage.getItem('TOTAL_CARDS') })\r\n        var i;\r\n        var total = localStorage.getItem('TOTAL_CARDS')\r\n        \r\n        for (i = 0; i < total; i++){\r\n            console.log(i)\r\n            this.state.statementCards.push({statement : ''});\r\n        }\r\n        //console.log(this.state.statementCards)\r\n    };\r\n\r\n    handleChange = (event, index) => {\r\n        this.state.statementCards[index] = event.target.value\r\n        this.setState({ statementCards : this.state.statementCards})\r\n    };\r\n\r\n    getStatements = () => {\r\n\r\n        var rawStatements = this.state.statementCards;\r\n        rawStatements = rawStatements.toString().split(\",\");\r\n        var statementsArray = [];\r\n        for (var i = 0; i < rawStatements.length; i++){\r\n            var data = rawStatements[i].split(',');\r\n            this.state.statements.push({ statement: data.toString(), surveyID: this.state.surveyID });\r\n        }\r\n        \r\n    }\r\n\r\n    next = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.getStatements();\r\n        const statement = this.state.statements;\r\n        //console.log(statement)\r\n        var newStatement = {};\r\n        var success = [];\r\n        for (var i = 0; i < statement.length; i++){\r\n            newStatement = statement[i];\r\n            createStatement(newStatement)\r\n                .then(response => {\r\n                    success.push(response.ok)\r\n                })\r\n                .catch(err => { console.log(err) })\r\n        }\r\n        var check = success.every( function (value, _, array) { return array[0] === value; });\r\n        if (check === true) {\r\n            //this.getTotal();\r\n            { this.setState({ Redirect: true }); }; \r\n            console.log(\"statements successfully added to the database\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n         if (this.state.Redirect) {\r\n            return (\r\n                <Redirect to={{\r\n                pathname: '/CreateSurvey_Step4',\r\n                }}/>\r\n            )\r\n        };\r\n        return (\r\n            <div>\r\n                <div className='grid-container'>\r\n                    <div className=\"item1 sub-header-container\">\r\n                        <h1 className=\"sub-heading\">\r\n                            Create Survey\r\n                        </h1>\r\n                    </div>\r\n                    <div className=' item6 navbar-container'>\r\n                    <Navbar/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='column-center'>\r\n                    <div className='total-text-container'>\r\n                        <h1 className='total-cards-text'>Total cards</h1>\r\n                        <h1 className='total-number-text'>{this.state.totalCards}</h1>\r\n                    </div>\r\n\r\n                    <div className='center cards-container'>\r\n                        \r\n                            <div>\r\n                                {this.state.statementCards.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index} className='space'>\r\n                                            <textarea\r\n                                                className='card'       \r\n                                                value={item.statement}\r\n                                                onChange={(e)=>this.handleChange(e, index)}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            \r\n                        \r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"register-btn\"\r\n                        onClick={(e) => this.next(e)}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\UploadStatements.js",["256","257","258"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport { createStatement } from '../BackendFunctions';\r\n\r\nexport default class UploadStatements extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            totalCards: '',\r\n            surveyID: '',\r\n            statementCards: [],\r\n            card: [{}],\r\n            statements: [],\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.generateStatementCards();\r\n    }\r\n\r\n    generateStatementCards() {\r\n        this.setState({ totalCards: localStorage.getItem('TOTAL_CARDS') })\r\n        var i;\r\n        var total = localStorage.getItem('TOTAL_CARDS')\r\n        \r\n        for (i = 0; i < total; i++){\r\n            console.log(i)\r\n            this.state.statementCards.push({});\r\n        }\r\n        console.log(this.state.statementCards)\r\n\r\n        this.getStatementsFromLS();\r\n    }\r\n\r\n    getStatementsFromLS() {\r\n        var rawStatements;\r\n        rawStatements = localStorage.getItem('STATEMENTS');\r\n        rawStatements = rawStatements.split(\",\");\r\n\r\n        var statementsArray = [];\r\n        for(var i = 0; i < rawStatements.length; i++) {\r\n            var data = rawStatements[i].split(',');\r\n            this.state.statements.push({ statement: data.toString(), surveyID: localStorage.getItem('SURVEY_ID') });\r\n        };\r\n        \r\n        //this.setState({ statements: statementsArray });\r\n    }\r\n\r\n    next = (e) => {\r\n        e.preventDefault();\r\n\r\n        const statement = this.state.statements;\r\n        //console.log(statement)\r\n        var newStatement = {};\r\n        var success = [];\r\n        for (var i = 0; i < statement.length; i++){\r\n            newStatement = statement[i];\r\n            createStatement(newStatement)\r\n                .then(response => {\r\n                    success.push(response.ok)\r\n                })\r\n                .catch(err => { console.log(err) })\r\n        }\r\n        var check = success.every( function (value, _, array) { return array[0] === value; });\r\n        if (check === true) {\r\n            //this.getTotal();\r\n            { this.setState({ Redirect: true }); }; \r\n            console.log(\"statements successfully added to the database\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n         if (this.state.Redirect) {\r\n            return (\r\n                <Redirect to={{\r\n                pathname: '/CreateSurvey_Step4',\r\n                }}/>\r\n            )\r\n        };\r\n        return (\r\n            <div>\r\n                <div className='grid-container'>\r\n                    <div className=\"item1 sub-header-container\">\r\n                        <h1 className=\"sub-heading\">\r\n                            Create Survey\r\n                        </h1>\r\n                    </div>\r\n                    <div className=' item6 navbar-container'>\r\n                    <Navbar/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='column-center'>\r\n                    <div className='total-text-container'>\r\n                        <h1 className='total-cards-text'>Total cards</h1>\r\n                        <h1 className='total-number-text'>{this.state.totalCards}</h1>\r\n                    </div>\r\n\r\n                    <div className='center cards-container'>\r\n                          <div>\r\n                            {this.state.statements.map((item, key) => {\r\n                                return (\r\n                                    <div key={key} className='space'>\r\n                                        <textarea\r\n                                            className='card'\r\n                                            key={key}\r\n                                            defaultValue={item.statement} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"register-btn\"\r\n                        onClick={(e) => this.next(e)}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Step4.js",["259","260"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport { createQuestion } from '../BackendFunctions';\r\n\r\nexport default class CreateSurvey_Step4 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            totalCards: '',\r\n            surveyID: '',\r\n            questionCards: [],\r\n            question: '',\r\n            questions: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ surveyID: localStorage.getItem('SURVEY_ID') });\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n       this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    addQuestion = () => {\r\n        this.state.questions.push({ question: this.state.question, surveyID: localStorage.getItem('SURVEY_ID') });\r\n        this.setState({ questions : this.state.questions})\r\n        console.log(this.state.questions)\r\n    }\r\n\r\n\r\n    next = (e) => {\r\n        e.preventDefault();\r\n\r\n        const question = this.state.questions;\r\n        //console.log(statement)\r\n        var newQuestion = {};\r\n        var success = [];\r\n        for (var i = 0; i < question.length; i++){\r\n            newQuestion = question[i];\r\n            createQuestion(newQuestion)\r\n                .then(response => {\r\n                    success.push(response.ok)\r\n                })\r\n                .catch(err => { console.log(err) })\r\n        }\r\n        var check = success.every( function (value, _, array) { return array[0] === value; });\r\n        if (check === true) {\r\n            //this.getTotal();\r\n            { this.setState({ Redirect: true }); }; \r\n            console.log(\"Questions successfully added to the database\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n         if (this.state.Redirect) {\r\n            return (\r\n                <Redirect to={{\r\n                pathname: '/CreateSurvey_Finish',\r\n                }}/>\r\n            )\r\n        };\r\n\r\n        const renderQuestion = (question, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{question.question}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <div className='grid-container'>\r\n                    <div className=\"item1 sub-header-container\">\r\n                        <h1 className=\"sub-heading\">\r\n                            Create Survey\r\n                        </h1>\r\n                    </div>\r\n                    <div className=' item6 navbar-container'>\r\n                    <Navbar/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='column-center'>\r\n                    <div className='total-text-container'>\r\n                        <h1 className='total-cards-text'>Ask Questions</h1>\r\n                    </div>\r\n\r\n                    <div className='question-cards-container'>\r\n                        <div className='questions-column-center'> \r\n                            <div className='space'>\r\n                                <textarea\r\n                                    className='input-question-field'       \r\n                                    type='text'\r\n                                    name='question'\r\n                                    // value={this.state.question}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <button\r\n                                className=\"add-question-btn\"\r\n                                onClick={this.addQuestion}\r\n                                >\r\n                                Add\r\n                            </button>\r\n\r\n                            <div>\r\n                                <table>\r\n                                    <tbody>\r\n                                        {this.state.questions.map(renderQuestion)}\r\n                                    </tbody>\r\n                                    </table>\r\n                            </div>\r\n                        \r\n                        </div>     \r\n                        \r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"register-btn\"\r\n                        onClick={(e) => this.next(e)}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\CreateSurvey_Finish.js",["261","262"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport { createQuestion } from '../BackendFunctions';\r\n\r\nexport default class CreateSurvey_Finish extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            \r\n            surveyID: '',\r\n            surveyCode: '',\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            surveyID: localStorage.getItem('SURVEY_ID'),\r\n            surveyCode: localStorage.getItem('SURVEY_CODE'),\r\n        });\r\n    };\r\n\r\n    clearLocalStorage = () => {\r\n        localStorage.removeItem('SURVEY_ID');\r\n        localStorage.removeItem('SURVEY_CODE');\r\n        localStorage.removeItem('STATEMENTS');\r\n        localStorage.removeItem('TOTAL_CARDS');\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className='grid-container'>\r\n                    <div className=\"item1 sub-header-container\">\r\n                        <h1 className=\"sub-heading\">\r\n                            Create Survey\r\n                        </h1>\r\n                    </div>\r\n                    <div className=' item6 navbar-container'>\r\n                    <Navbar/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='column-center'>\r\n                    <div className='total-text-container'>\r\n                        <h1 className='total-cards-text'>Finish Survey</h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h2>Survey Code</h2>\r\n                        <p>{this.state.surveyCode}</p>\r\n                    </div>\r\n                \r\n                    <Link to={\"/Profile\"}>\r\n                        <button\r\n                            className=\"register-btn\"\r\n                            onClick={this.clearLocalStorage}>\r\n                                Finish\r\n                        </button>\r\n                        </Link>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\AuthApi.js",[],"D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step1.js",["263","264"],"import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\n// import { getSurveys } from '../BackendFunctions';\r\n//TODO store admin name and email when creating survey\r\nexport default class Participant_Step1 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            surveyName: '',\r\n            surveyDescription: '',\r\n            adminName: 'Admin Name',\r\n            adminEmail: 'admin@gmail.com',\r\n\r\n        }\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.getSurveyDetails();\r\n\r\n  };\r\n\r\n  getSurveyDetails() {\r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      surveyDescription: localStorage.getItem('SURVEY_DESCRIPTION'),\r\n    })\r\n  };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n            <div className='grid-container'>\r\n              <div className=\"item1 sub-header-container\">\r\n                <h1 className=\"sub-heading\">\r\n                  Survey Details\r\n                </h1>\r\n              </div>\r\n              <div className=' item6 navbar-container'>\r\n                <Navbar/>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className='center-2'>\r\n                <p className='headings'>Survey Name</p>\r\n                \r\n                <p className='survey-name'>{this.state.surveyName}</p>\r\n                \r\n                <p className='headings'>Survey Description</p>\r\n\r\n                <div className='description-container'>\r\n                    <p className='survey-description'>{this.state.surveyDescription}</p>\r\n                </div>\r\n                \r\n                <p className='headings'>Survey Owner</p>\r\n                <p className='admin-name'>{this.state.adminName} {this.state.adminEmail}</p>\r\n                \r\n                <Link to='/Participant_Step2'>\r\n                    <button>Next</button>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n            {/* <div className='center'>\r\n            <div className='dashboard-grid-container'>\r\n            <div><h1 className='item7 container-heading'>Profile</h1></div>  \r\n\r\n              <div className='item8 profile-content-container'>\r\n                <div className='profile-container'>\r\n                <div><h2 className='name-text'>{this.state.firstName}</h2></div> \r\n                  <div>\r\n                    <Link to={\"/CreateSurvey_Step1\"}>\r\n                      <button className=\"profile-btn\">New Survey</button>\r\n                    </Link>\r\n                  </div>   \r\n                <div><button className='profile-btn'>Change Password</button></div> \r\n                <div><button className='profile-btn'>Edit Avatar</button></div> \r\n                <div><button className='profile-btn'>Delete Account</button></div> \r\n                </div>\r\n              </div>\r\n\r\n              <div><h1 className='item7 container-heading'>Surveys</h1></div>\r\n                <div className='item10 profile-content-container'>\r\n                  <div className='all-surveys-container'>\r\n                    <div className='survey-container'>\r\n                      <h2>{this.state.firstName}</h2>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step2.js",["265","266"],"import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\n// import { getSurveys } from '../BackendFunctions';\r\n\r\nexport default class Participant_Step2 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          surveyName: '',\r\n          privacyNotice: '',\r\n          adminName: 'Admin Name',\r\n          adminEmail: 'admin@gmail.com',\r\n          agreed: false,\r\n\r\n        }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSurveyDetails();\r\n\r\n  };\r\n\r\n  getSurveyDetails() {\r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      privacyNotice: localStorage.getItem('PRIVACY_NOTICE'),\r\n    })\r\n  };\r\n\r\n  handleCheckboxChange = () => {\r\n    this.setState(previousState => {\r\n      return { agreed: !previousState.agreed }\r\n    })\r\n    \r\n  };\r\n\r\n  clearLocalStorage = () => {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n      \r\n        let agreeBtnStyle = this.state.agreed ? 'enabled' : 'disabled';\r\n        return (\r\n\r\n            <div>\r\n            <div className='grid-container'>\r\n              <div className=\"item1 sub-header-container\">\r\n                <h1 className=\"sub-heading\">\r\n                  Privacy Notice\r\n                </h1>\r\n              </div>\r\n              <div className=' item6 navbar-container'>\r\n                <Navbar/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='center-2'>\r\n                <p className='headings'>Survey Name</p>\r\n                \r\n                <p className='survey-name'>{this.state.surveyName}</p>\r\n                \r\n                <p className='headings'>Survey Owner</p>\r\n                <p className='admin-name'>{this.state.adminName} {this.state.adminEmail}</p>\r\n\r\n                <p className='headings'>Privacy Notice</p>\r\n                    <div className='description-container'>\r\n                        <p className='survey-description'>{this.state.privacyNotice}</p>\r\n                    </div>\r\n\r\n                <p>I Agree \r\n                    <input \r\n                    name =\"agree\"\r\n                    type=\"Checkbox\"\r\n                    value={this.state.agreed}\r\n                    onChange={this.handleCheckboxChange}\r\n                    />\r\n                </p>\r\n                <Link to={'/Participant_Home'}>\r\n                  <button\r\n                  className='space button button3'\r\n                  onClick={this.clearLocalStorage}>\r\n                      Disagree\r\n                  </button>\r\n                  </Link>\r\n                \r\n                <Link to={'/Participant_Step3'}>\r\n                  <button\r\n                    type=\"submit\" \r\n                    className = {agreeBtnStyle}\r\n                    disabled={!this.state.agreed}\r\n                    >\r\n                      Agree\r\n                  </button>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Home.js",["267","268"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Input } from '@material-ui/core';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\n\r\n\r\nexport default class Participant_Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      surveyCode: '',\r\n      surveyID: '',\r\n    };\r\n  }\r\n\r\n  onChange = (e) =>  {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    }\r\n\r\n  getSurvey = (e) => {\r\n      e.preventDefault()\r\n\r\n      fetch(\"https://auto-q-survey-web.herokuapp.com/api/getSurveyDetails\", {\r\n\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          surveyCode: this.state.surveyCode,\r\n        })\r\n      })\r\n        .then(res => {\r\n          return res.json()\r\n        })\r\n        .then((data) => {\r\n          console.log(data)\r\n          this.setState({ surveyID: data.survey_id });\r\n          // //console.log(this.state.adminToken);\r\n          if (this.state.surveyID != null) {\r\n            localStorage.setItem('SURVEY_ID', this.state.surveyID);\r\n            localStorage.setItem('SURVEY_NAME', data.survey_name);\r\n            localStorage.setItem('SURVEY_DESCRIPTION', data.survey_description);\r\n            localStorage.setItem('CATEGORY1', data.category1);\r\n            localStorage.setItem('CATEGORY2', data.category2);\r\n            localStorage.setItem('CATEGORY3', data.category3);\r\n            localStorage.setItem('PRIVACY_NOTICE', data.privacy_statement);\r\n            this.setState({ Redirect: true });\r\n          };\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n  render() {\r\n\r\n    if (this.state.Redirect) {\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/Participant_Step1',\r\n        }}/>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='grid-container'>\r\n\r\n          <div className=\"item1 header-container\">\r\n            <h1 className=\"heading\">\r\n              Take Part in Q-Methodology Survey\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=' item6 navbar-container'>\r\n            <Navbar/>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n        <div className='center-3'>\r\n\r\n          <div className=\"sub-container\">\r\n            <h2 className=\"heading-two\">Participant</h2>\r\n\r\n            <div className=\"center\">\r\n              <input\r\n                className=\"inputBox\"\r\n                placeholder=\"Code\"\r\n                type=\"text\"\r\n                name=\"surveyCode\"\r\n                value={this.state.surveyCode}\r\n                onChange={this.onChange}\r\n              >\r\n                \r\n              </input>\r\n            </div>\r\n\r\n            <div className=\"btn-container\">\r\n              <div className=\"center\">\r\n                {/* <Link to={'/Participant_Step1'}> */}\r\n                  <button className=\"btn\" onClick={this.getSurvey}>START SURVEY</button>\r\n                {/* </Link> */}\r\n                </div>\r\n            </div>\r\n \r\n            <div className=\"center\">\r\n              <button className=\"pass-reset-btn\">Manage my data</button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step3.js",["269","270","271","272","273","274","275","276","277","278","279","280"],"import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport uuid from 'react-uuid';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n//TODO store admin name and email when creating survey\r\n//TODO add questions before this page \r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  //console.log(result);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  //console.log(removed);\r\n  result.splice(endIndex, 0, removed);\r\n  //console.log(result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n\r\n  //console.log(source)\r\n  //console.log(destination)\r\n    const sourceClone = Array.from(source);\r\n    //console.log(sourceClone)\r\n    const destClone = Array.from(destination);\r\n    //console.log(destClone)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    //console.log(removed)\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n    //console.log(destClone)\r\n    \r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    //console.log(result)\r\n    return result;\r\n};\r\n\r\n\r\nexport default class Participant_Step3 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveyID: '',\r\n      surveyName: '',\r\n        \r\n      category1: '',\r\n      category2: '',\r\n      category3: '',\r\n      data: [],\r\n\r\n      //statements: [],\r\n      \r\n\r\n      lists: {\r\n        statements: 'statements',\r\n        category1List: 'category1List',\r\n        category2List: 'category2List',\r\n        category3List: 'category3List',\r\n      },\r\n\r\n      tasks: {\r\n        'task-1': { id: 'task-1', content: 'Take out the garbage' },\r\n        'task-2': { id: 'task-2', content: 'Watch my favorite show' },\r\n        'task-3': { id: 'task-3', content: 'Charge my phone' },\r\n        'task-4': { id: 'task-4', content: 'Cook dinner' }\r\n      },\r\n\r\n      columns2: {\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'Statements',\r\n          taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: '',\r\n          taskIds: []\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: '',\r\n          taskIds: []\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: '',\r\n          taskIds: []\r\n        },\r\n      },\r\n\r\n      columnOrder: ['column-1', 'column-2', 'column-3', 'column-4'],\r\n      statements: {},\r\n      columns: {\r\n        'column-1': { id: 'column-1', title: 'Statements', statementIds: [] },\r\n        'column-2': { id: 'column-2', title: localStorage.getItem('CATEGORY1'), statementIds: [] },\r\n        'column-3': { id: 'column-3', title: localStorage.getItem('CATEGORY2'), statementIds: [] },\r\n        'column-4': { id: 'column-4', title: localStorage.getItem('CATEGORY3'), statementIds: [] },\r\n      },\r\n      \r\n      category1List: [],\r\n      category2List: [],\r\n      category3List: [],\r\n    };\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      surveyID: localStorage.getItem('SURVEY_ID'),\r\n      category1: localStorage.getItem('CATEGORY1'),\r\n      category2: localStorage.getItem('CATEGORY2'),\r\n      category3: localStorage.getItem('CATEGORY3'),\r\n    });\r\n\r\n    this.getStatements();\r\n  };\r\n\r\n  getSurveyDetails (){\r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      surveyID: localStorage.getItem('SURVEY_ID'),\r\n      category1: localStorage.getItem('CATEGORY1'),\r\n      category2: localStorage.getItem('CATEGORY2'),\r\n      category3: localStorage.getItem('CATEGORY3'),\r\n    })\r\n  };\r\n\r\n  getStatements(e){\r\n    //e.preventDefault()\r\n\r\n    var surveyID = localStorage.getItem('SURVEY_ID');\r\n    var statementsArr = [];\r\n    var statementId = '';\r\n\r\n      fetch(\"https://auto-q-survey-web.herokuapp.com/api/getStatements\", {\r\n\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          surveyID: surveyID,\r\n        })\r\n      })\r\n        .then(res => {\r\n          return res.json()\r\n        })\r\n        .then((data) => {\r\n          for (var i = 0; i < data.length; i++) {   \r\n            \r\n            statementsArr.push({ id: i.toString(), content: data[i].statement })\r\n            \r\n            this.setState(prevState => ({\r\n              statements: { ...prevState.statements, ...statementsArr },\r\n            }));\r\n\r\n            var keys = Object.keys(this.state.statements)\r\n              for (var j = 0; j < keys.length; j++){  \r\n                if (!(keys[j] in this.state.columns['column-1'].statementIds)) {\r\n                  this.state.columns['column-1'].statementIds.push(keys[j])\r\n                }     \r\n              };\r\n\r\n          };\r\n\r\n          console.log(this.state.statements)\r\n          console.log(this.state.columns)\r\n        })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  getList = id => this.state[this.state.lists[id]];\r\n        //this.state[this.id2List[id]];\r\n        \r\n\r\n  // onDragEnd = result => {\r\n  //   const { source, destination } = result;\r\n  //   // dropped outside the list\r\n  //   if (!destination) { return; };\r\n\r\n  //   if (source.droppableId === destination.droppableId) {\r\n  //     //console.log(destination.index)\r\n  //     const items = reorder(\r\n  //       this.getList(source.droppableId),\r\n  //       source.index,\r\n  //       destination.index\r\n  //     );\r\n  //     let state = { items };\r\n  //     console.log(state)\r\n\r\n  //     if (source.droppableId === 'category1List') {\r\n  //       //state = { category1List: items };\r\n  //       this.setState({category1List: items});\r\n  //     } else {\r\n  //       this.setState({statements: items});\r\n  //     }\r\n\r\n      \r\n\r\n  //   }\r\n  //   else {\r\n  //     const result = move(\r\n  //       this.getList(source.droppableId),\r\n  //       this.getList(destination.droppableId),\r\n  //       source,\r\n  //       destination\r\n  //     );\r\n\r\n  //    // console.log(result)\r\n  //     this.setState({\r\n  //       statements: result.statements,\r\n  //       category1List: result.category1List,\r\n  //       category2List: result.category2List,\r\n  //       category3List: result.category3List\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  onDragEnd = (result) => {\r\n\r\n    const { destination, source, draggableId } = result\r\n    //console.log(result)\r\n\r\n    //If card is dropped outside any column then return the card to the previous column\r\n    if (!destination) { return };\r\n\r\n    if ( destination.droppableId === source.droppableId &&\r\n          destination.index === source.index) {\r\n      return\r\n    }\r\n\r\n    const start = this.state.columns[source.droppableId]\r\n    const finish = this.state.columns[destination.droppableId]\r\n\r\n    if (start === finish) {\r\n      const newStatementIds = Array.from(start.statementIds)\r\n      newStatementIds.splice(source.index, 1)\r\n      newStatementIds.splice(destination.index, 0, draggableId)\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        statementIds: newStatementIds\r\n      }\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newColumn.id]: newColumn\r\n        }\r\n      }\r\n\r\n      this.setState(newState)\r\n      return\r\n    }\r\n\r\n    // Moving from one list to another\r\n    const startStatementIds = Array.from(start.statementIds)\r\n    startStatementIds.splice(source.index, 1)\r\n    const newStart = {\r\n      ...start,\r\n      statementIds: startStatementIds\r\n    }\r\n\r\n    const finishStatementIds = Array.from(finish.statementIds)\r\n    finishStatementIds.splice(destination.index, 0, draggableId)\r\n    const newFinish = {\r\n      ...finish,\r\n      statementIds: finishStatementIds\r\n    }\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish\r\n      }\r\n    }\r\n\r\n    \r\n    this.setState(newState)\r\n  };\r\n\r\n  next = () => {\r\n    //Fit statemnents from columns into list of array\r\n    var cat1Ids = Object.values(this.state.columns['column-2'].statementIds)\r\n    var keys = Object.keys(this.state.statements)\r\n    for (var i = 0; i < cat1Ids.length; i++) {\r\n      if ((cat1Ids[i] in keys)) {\r\n        var id = cat1Ids[i]\r\n        this.state.category1List.push(this.state.statements[id])\r\n      };\r\n    };\r\n\r\n    var cat2Ids = Object.values(this.state.columns['column-3'].statementIds)\r\n    var keys = Object.keys(this.state.statements)\r\n    for (var i = 0; i < cat2Ids.length; i++) {\r\n      if ((cat2Ids[i] in keys)) {\r\n        var id = cat2Ids[i]\r\n        this.state.category2List.push(this.state.statements[id])\r\n      };\r\n    };\r\n\r\n    var cat3Ids = Object.values(this.state.columns['column-4'].statementIds)\r\n    var keys = Object.keys(this.state.statements)\r\n    for (var i = 0; i < cat3Ids.length; i++) {\r\n      if ((cat3Ids[i] in keys)) {\r\n        var id = cat3Ids[i]\r\n        this.state.category3List.push(this.state.statements[id])\r\n      };\r\n    };\r\n\r\n    // console.log(this.state.category1List)\r\n    // console.log(this.state.category2List)\r\n    // console.log(this.state.category3List)\r\n\r\n    if (this.state.columns['column-1'].statementIds.length === 0) {\r\n      console.log(this.state.columns['column-1'])\r\n      localStorage.setItem('CATEGORY1_STATEMENTS', JSON.stringify(this.state.category1List));\r\n      localStorage.setItem('CATEGORY2_STATEMENTS', this.state.category2List.toString());\r\n      localStorage.setItem('CATEGORY3_STATEMENTS', this.state.category3List.toString());\r\n      this.setState({ Redirect: true });\r\n    }\r\n    else {\r\n      alert('Please complete the pre-sort')\r\n      console.log(this.state.columns['column-1'])\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.Redirect) {\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/Participant_Step4_Second',\r\n        }}/>\r\n      )\r\n    };\r\n       \r\n        return (\r\n\r\n            <div>\r\n            <div className='grid-container'>\r\n              <div className=\"item1 sub-header-container\">\r\n                <h1 className=\"sub-heading\">\r\n                  Q-Sort - Step 1\r\n                </h1>\r\n              </div>\r\n              <div className=' item6 navbar-container'>\r\n                <Navbar/>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className='center-2'>\r\n              <p className='headings'>Survey Name</p>  \r\n              <p className='survey-name'>{this.state.surveyName}</p>\r\n\r\n              <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div style={{display: 'flex'}}>\r\n                  {this.state.columnOrder.map(columnId => {\r\n                    const column = this.state.columns[columnId]\r\n                    const statements = column.statementIds.map(\r\n                      (statementId) => this.state.statements[statementId]\r\n                    )\r\n\r\n                    return (\r\n                      <div style={{\r\n                        margin: 8,\r\n                        border: '1px solid lightgrey',\r\n                        borderRadius: 2,\r\n                        width: 220,\r\n                        display: 'flex',\r\n                        flexDirection: 'column'\r\n                      }}>\r\n                        <h2>{column.title}</h2>\r\n                        <Droppable droppableId={column.id} type=\"TASK\">\r\n                          {(provided, snapshot) => (\r\n                            <div \r\n                              style={{\r\n                                padding: 8,\r\n                                transition: 'background-color 0.2s ease',\r\n                                backgroundColor: 'skyblue',\r\n                                flexGrow: 1,\r\n                                minHeight: 100,\r\n\r\n                              }}\r\n                              ref={provided.innerRef}\r\n                              {...provided.droppableProps}\r\n                              isDraggingOver={snapshot.isDraggingOver}\r\n                            >\r\n                              {statements.map((statement, index) => (   \r\n                                <Draggable\r\n                                  key={statement.id}\r\n                                  draggableId={statement.id}\r\n                                  index={index}\r\n                                  \r\n                                  >\r\n                                    {(provided, snapshot) => (\r\n                                      <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={{\r\n                                          userSelect: \"none\",\r\n                                          padding: 16,\r\n                                          margin: \"0 0 8px 0\",\r\n                                          minHeight: \"50px\",\r\n                                          backgroundColor: snapshot.isDragging\r\n                                            ? \"#263B4A\"\r\n                                            : \"#456C86\",\r\n                                            color: \"white\",\r\n                                            ...provided.draggableProps.style\r\n                                        }}\r\n                                      >\r\n                                        {statement.content}\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                // <Task key={task.id} task={task} index={index} />\r\n                              ))}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </div>\r\n                      // <Column key={column.id} column={column} tasks={tasks} />\r\n                    )\r\n                  })}\r\n                </div>\r\n              </DragDropContext>\r\n              {/* <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                  <Droppable droppableId=\"statements\">\r\n                      {(provided, snapshot) => (\r\n                          <div\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"lightblue\"\r\n                                  : \"lightgrey\",\r\n                                padding: 4,\r\n                                width: 250,\r\n                                minHeight: 500,\r\n                                marginLeft: 20\r\n                              }}\r\n                          >\r\n                              {this.state.statements.map((item, index) => (\r\n                                  <Draggable\r\n                                      key={item.id}\r\n                                      draggableId={item.id}\r\n                                      index={index}>\r\n                                      {(provided, snapshot) => (\r\n                                          <div\r\n                                              ref={provided.innerRef}\r\n                                              {...provided.draggableProps}\r\n                                              {...provided.dragHandleProps}\r\n                                              style={{ userSelect: \"none\", padding: 16, margin: \"0 0 8px 0\", minHeight: \"50px\",\r\n                                                        backgroundColor: snapshot.isDragging\r\n                                                          ? \"#263B4A\"\r\n                                                          : \"#456C86\",\r\n                                                        color: \"white\",\r\n                                                        ...provided.draggableProps.style\r\n                                              }}\r\n                                          >\r\n                                              {item.statement}\r\n                                          </div>\r\n                                      )}\r\n                                  </Draggable>\r\n                              ))}\r\n                              {provided.placeholder}\r\n                          </div>\r\n                      )}\r\n                  </Droppable>\r\n                  <Droppable droppableId=\"category1List\">\r\n                      {(provided, snapshot) => (\r\n                          <div\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"lightblue\"\r\n                                  : \"lightgrey\",\r\n                                padding: 4,\r\n                                width: 250,\r\n                                minHeight: 500,\r\n                                marginLeft: 20\r\n                              }}\r\n                          >\r\n                              {this.state.category1List.map((item, index) => (\r\n                                  <Draggable\r\n                                      key={item.id}\r\n                                      draggableId={item.id}\r\n                                      index={index}>\r\n                                      {(provided, snapshot) => (\r\n                                          <div\r\n                                              ref={provided.innerRef}\r\n                                              {...provided.draggableProps}\r\n                                              {...provided.dragHandleProps}\r\n                                              style={{ userSelect: \"none\", padding: 16, margin: \"0 0 8px 0\", minHeight: \"50px\",\r\n                                                        backgroundColor: snapshot.isDragging\r\n                                                          ? \"#263B4A\"\r\n                                                          : \"#456C86\",\r\n                                                        color: \"white\",\r\n                                                        ...provided.draggableProps.style\r\n                                              }}\r\n                                          >\r\n                                              {item.statement}\r\n                                          </div>\r\n                                      )}\r\n                                  </Draggable>\r\n                              ))}\r\n                              {provided.placeholder}\r\n                          </div>\r\n                      )}\r\n                  </Droppable>\r\n              </DragDropContext>\r\n            </div>    */}\r\n\r\n              <div>\r\n                <button onClick={this.next}>\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4.js",["281","282","283","284","285","286","287","288","289","290"],"import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport uuid from 'react-uuid';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n//TODO store admin name and email when creating survey\r\n//TODO add questions before this page \r\n\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n    return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n  //console.log(destClone)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    //console.log(result)\r\n    return result;\r\n};\r\n\r\n\r\nexport default class Participant_Step4 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveyID: '',\r\n      surveyName: '',\r\n        \r\n      category1: '',\r\n      category2: '',\r\n      category3: '',\r\n\r\n      anchors: [],\r\n\r\n      category1List: [],\r\n      category2List: [],\r\n      category3List: [],\r\n\r\n      columnOrder: ['column-1', 'column-2', 'column-3'],\r\n      columns: {\r\n        'column-1': { id: 'column-1', title: localStorage.getItem('CATEGORY1'), statementIds: [] },\r\n        'column-2': { id: 'column-2', title: localStorage.getItem('CATEGORY2'), statementIds: [] },\r\n        'column-3': { id: 'column-3', title: localStorage.getItem('CATEGORY3'), statementIds: [] },\r\n      },\r\n\r\n      cat1Statements: {},\r\n      cat2Statements: {},\r\n      cat3Statements: {},\r\n\r\n      anchors2: [\r\n            { id: '0', anchorNumber: -3, slots: [{ id: '0', statement: [] }] },\r\n            { id: '1', anchorNumber: -2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '2', anchorNumber: -1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '3', anchorNumber: 0, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }, { id: '3', statement: [] }] },\r\n            { id: '4', anchorNumber: 1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '5', anchorNumber: 2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '6', anchorNumber: 3, slots: [{ id: '0', statement: [] }] },\r\n          ],\r\n\r\n      statements1: {},\r\n\r\n      anchors3: {\r\n        ['anchor-1']: [],\r\n        ['anchor-2']: [],\r\n        ['anchor-3']: [],\r\n      },\r\n      cat1statements2: [\r\n        {\r\n            id: '0',\r\n            content: 'Statement 1'\r\n        },\r\n        {\r\n            id: '1',\r\n            content: 'Statement 2'\r\n        },\r\n      ],\r\n\r\n       anchors4: [\r\n        {\r\n          anchors: [\r\n            { id: '0', anchorNumber: -3, slots: [{ id: '0', statement: [] }] },\r\n            { id: '1', anchorNumber: -2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '2', anchorNumber: -1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '3', anchorNumber: 0, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }, { id: '3', statement: [] }] },\r\n            { id: '4', anchorNumber: 1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '5', anchorNumber: 2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '6', anchorNumber: 3, slots: [{ id: '0', statement: [] }] },\r\n          ],\r\n          \r\n          cat1: [\r\n            { id: '0', content: 'Statement 1' },\r\n            { id: '1', content: 'Statement 2' },\r\n          ], \r\n          cat2: [\r\n            { id: '2', content: 'Statement 3' },\r\n            { id: '3', content: 'Statement 4' },\r\n          ],\r\n          cat3: [\r\n            { id: '4', content: 'Statement 5' },\r\n            { id: '5', content: 'Statement 6' },\r\n          ]\r\n\r\n        },\r\n      ],\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      surveyID: localStorage.getItem('SURVEY_ID'),\r\n      category1: localStorage.getItem('CATEGORY1'),\r\n      category2: localStorage.getItem('CATEGORY2'),\r\n      category3: localStorage.getItem('CATEGORY3')\r\n    });\r\n\r\n    this.getAnchors();  \r\n\r\n  };\r\n\r\n  getAnchors(e){\r\n    //e.preventDefault()\r\n\r\n    var surveyID = localStorage.getItem('SURVEY_ID');\r\n    var anchorsArr3 = [];\r\n    var numberOfSlots = [];\r\n    var arr = [];\r\n    var cat1Items = [];\r\n    var cat2Items = [];\r\n    var cat3Items = [];\r\n\r\n\r\n      fetch(\"https://auto-q-survey-web.herokuapp.com/api/getAnchors\", {\r\n\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          surveyID: surveyID,\r\n        })\r\n      })\r\n        .then(res => {\r\n          return res.json()\r\n        })\r\n        .then((data) => {\r\n          //Sort the data first\r\n          \r\n          for (var i = 0; i < data.length; i++) {\r\n            arr.push(data[i].anchor)\r\n            numberOfSlots = data[i].slots\r\n            //Create and array of objects for each anchor\r\n            //the number of objects is specified in the data[i].slots \r\n            //push it to\r\n            for (var array = [], j = 0; j < numberOfSlots; j++) {\r\n              array.push({ id: j.toString() });\r\n            }\r\n            anchorsArr3.push({ id: i.toString(), anchorNumber: data[i].anchor, slots: array });\r\n            \r\n          };\r\n           //Get statements for category 1\r\n            var statements = localStorage.getItem('CATEGORY1_STATEMENTS')\r\n            var statementsCat1 = JSON.parse(statements)\r\n            //console.log(statementsCat1)\r\n            //this.setState({ category1List : statementsCat1 })\r\n            \r\n            \r\n            for (var i = 0; i < statementsCat1.length; i++){\r\n              cat1Items.push({ id: i.toString(), content: statementsCat1[i].content });\r\n\r\n              this.setState(prevState => ({\r\n                cat1Statements: { ...prevState.cat1Statements, ...cat1Items }\r\n              }));\r\n\r\n              var keys = Object.keys(this.state.cat1Statements);\r\n              for (var j = 0; j < keys.length; j++){\r\n                if (!(keys[j] in this.state.columns['column-1'].statementIds)) {\r\n                  this.state.columns['column-1'].statementIds.push(keys[j])\r\n                }\r\n              };\r\n          };  \r\n          \r\n          //console.log(this.state.cat1Statements)\r\n\r\n          this.sort('anchorNumber', anchorsArr3)\r\n          this.setState({ anchors: anchorsArr3 });\r\n          //this.state.anchors.push({category1: categories})\r\n          console.log(this.state.cat1Statements);\r\n          //console.log(this.state.columns)\r\n          console.log(this.state.anchors2)\r\n          \r\n        })\r\n      .catch(error => console.log(error));\r\n    \r\n   \r\n  };\r\n\r\n  sort = function (prop, arr) {\r\n    prop = prop.split('.');\r\n    var len = prop.length;\r\n              \r\n    arr.sort(function (a, b) {\r\n      var i = 0;\r\n        while( i < len ) {\r\n          a = a[prop[i]];\r\n          b = b[prop[i]];\r\n          i++;\r\n        }\r\n      if (a < b) {\r\n        return -1;\r\n      }\r\n      else if (a > b) {\r\n        return 1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  // onDragEnd = (result) => {\r\n\r\n  //   const { destination, source, draggableId } = result\r\n  //     console.log(this.state.anchors2)\r\n  //     console.log(this.state.columns)\r\n\r\n  //   //If card is dropped outside any column then return the card to the previous column\r\n  //   if (!destination) { return };\r\n\r\n  //   if ( destination.droppableId === source.droppableId &&\r\n  //         destination.index === source.index) {\r\n  //     return\r\n  //   }\r\n\r\n  //   const start = this.state.columns[source.droppableId]\r\n  //   const finish = this.state.columns[destination.droppableId]\r\n\r\n  //   if (start === finish) {\r\n  //     const newStatementIds = Array.from(start.statementIds)\r\n  //     newStatementIds.splice(source.index, 1)\r\n  //     newStatementIds.splice(destination.index, 0, draggableId)\r\n\r\n  //     const newColumn = {\r\n  //       ...start,\r\n  //       statementIds: newStatementIds\r\n  //     }\r\n\r\n  //     const newState = {\r\n  //       ...this.state,\r\n  //       columns: {\r\n  //         ...this.state.columns,\r\n  //         [newColumn.id]: newColumn\r\n  //       }\r\n  //     }\r\n\r\n  //     this.setState(newState)\r\n  //     return\r\n  //   }\r\n\r\n  //   // Moving from one list to another\r\n  //   const startStatementIds = Array.from(start.statementIds)\r\n  //   startStatementIds.splice(source.index, 1)\r\n  //   const newStart = {\r\n  //     ...start,\r\n  //     statementIds: startStatementIds\r\n  //   }\r\n\r\n  //   const finishStatementIds = Array.from(finish.statementIds)\r\n  //   finishStatementIds.splice(destination.index, 0, draggableId)\r\n  //   const newFinish = {\r\n  //     ...finish,\r\n  //     statementIds: finishStatementIds\r\n  //   }\r\n\r\n  //   const newState = {\r\n  //     ...this.state,\r\n  //     columns: {\r\n  //       ...this.state.columns,\r\n  //       [newStart.id]: newStart,\r\n  //       [newFinish.id]: newFinish\r\n  //     }\r\n  //   }\r\n\r\n    \r\n  //   this.setState(newState)\r\n  // };\r\n\r\n  //   onDragEnd(result) {\r\n  //   // dropped outside the list\r\n  //   console.log(result);\r\n  //   console.log(\"innner drag\");\r\n  //   if (!result.destination) {\r\n  //     return;\r\n  //   }\r\n  //   const sourceIndex = result.source.index;\r\n  //   const destIndex = result.destination.index;\r\n  //   if (result.type === \"droppableItem\") {\r\n  //     const items = reorder(this.state.items, sourceIndex, destIndex);\r\n\r\n  //     this.setState({\r\n  //       items\r\n  //     });\r\n  //   } else if (result.type === \"droppableSubItem\") {\r\n  //     const itemSubItemMap = this.state.items.reduce((acc, item) => {\r\n  //       acc[item.id] = item.subItems;\r\n  //       return acc;\r\n  //     }, {});\r\n\r\n  //     const sourceParentId = parseInt(result.source.droppableId);\r\n  //     const destParentId = parseInt(result.destination.droppableId);\r\n\r\n  //     const sourceSubItems = itemSubItemMap[sourceParentId];\r\n  //     const destSubItems = itemSubItemMap[destParentId];\r\n\r\n  //     let newItems = [...this.state.items];\r\n\r\n  //     /** In this case subItems are reOrdered inside same Parent */\r\n  //     if (sourceParentId === destParentId) {\r\n  //       const reorderedSubItems = reorder(\r\n  //         sourceSubItems,\r\n  //         sourceIndex,\r\n  //         destIndex\r\n  //       );\r\n  //       newItems = newItems.map(item => {\r\n  //         if (item.id === sourceParentId) {\r\n  //           item.subItems = reorderedSubItems;\r\n  //         }\r\n  //         return item;\r\n  //       });\r\n  //       this.setState({\r\n  //         items: newItems\r\n  //       });\r\n  //     } else {\r\n  //       let newSourceSubItems = [...sourceSubItems];\r\n  //       const [draggedItem] = newSourceSubItems.splice(sourceIndex, 1);\r\n\r\n  //       let newDestSubItems = [...destSubItems];\r\n  //       newDestSubItems.splice(destIndex, 0, draggedItem);\r\n  //       newItems = newItems.map(item => {\r\n  //         if (item.id === sourceParentId) {\r\n  //           item.subItems = newSourceSubItems;\r\n  //         } else if (item.id === destParentId) {\r\n  //           item.subItems = newDestSubItems;\r\n  //         }\r\n  //         return item;\r\n  //       });\r\n  //       this.setState({\r\n  //         items: newItems\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    console.log(source, destination)\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    };\r\n\r\n    \r\n    //Refactor This switch statement! \r\n    switch (source.droppableId) {        \r\n      case 'ITEMS':\r\n            const copied = copy(\r\n                this.state.cat1statements,\r\n                this.state.anchors2[destination.droppableId],\r\n                source,\r\n                destination\r\n            );\r\n            console.log(copied);\r\n            var object = { id: uuid(), content: copied[0].content};\r\n            // for (var i = 0; i < copied.length; i++) {\r\n            //     object = { id: uuid(), content: copied[i].content };\r\n            // };\r\n            \r\n            //Remove selected item from the initiall list\r\n            var copyCat1 = this.state.cat1statements;\r\n            copyCat1.splice(source.index, 1);\r\n            this.setState({ cat1statements: copyCat1 });\r\n            this.state.anchors2[destination.droppableId].unshift(object);\r\n            //this.state.cat1statements.splice(source.index, 1)\r\n            break;\r\n      \r\n      default:\r\n            const moved = move(\r\n                this.state.anchors2[source.droppableId],\r\n                this.state.anchors2[destination.droppableId],\r\n                source,\r\n                destination\r\n            );\r\n            this.setState({ anchors2: moved });\r\n        break;\r\n    }\r\n\r\n    //console.log(this.state.anchors2);\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n        return (\r\n\r\n            <div>\r\n            <div className='grid-container'>\r\n              <div className=\"item1 sub-header-container\">\r\n                <h1 className=\"sub-heading\">\r\n                  Q-Sort - Step 2\r\n                </h1>\r\n              </div>\r\n              <div className=' item6 navbar-container'>\r\n                <Navbar/>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className='center-2'>\r\n              <p className='headings'>Survey Name</p>  \r\n              <p className='survey-name'>{this.state.surveyName}</p>\r\n\r\n              <div style={{ display: 'flex', justifyContent: \"center\" }}> \r\n                <div>  \r\n                  <DragDropContext onDragEnd={this.onDragEnd}>\r\n                  {/* <div                       \r\n                    style={{\r\n                      margin: 8,\r\n                      border: '1px solid black',\r\n                      borderRadius: 2,\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      padding: 10,\r\n                      textAlign: 'center'\r\n                    }}\r\n                  >\r\n                    {this.state.anchors2.map((item, index) => (\r\n                      <div key={item.id} index={index}>                            \r\n                        <div>\r\n                          <div\r\n                            style={{\r\n                              userSelect: \"none\",\r\n                              padding: 10,\r\n                              margin: \"0 0 8px 0\",\r\n                              minHeight: \"50px\",\r\n                              backgroundColor: 'grey',\r\n                            }}\r\n                          >\r\n                            {item.anchorNumber}\r\n                              <div>                                                                    \r\n                                  <div\r\n                                  style={{\r\n                                    userSelect: \"none\",\r\n                                    padding: 10,\r\n                                    margin: \"0 0 8px 0\",\r\n                                    minHeight: 50,\r\n                                    width: 110,\r\n                                    backgroundColor: 'lightGrey',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    justifyContent: \"center\",\r\n                                  }}\r\n                                  >\r\n                                  {item.slots.map((slot, index) => (\r\n                                      \r\n                                      <Droppable\r\n                                        key={slot.id}\r\n                                        droppableId={slot.id}\r\n                                        index={index}\r\n                                        type='SLOT'\r\n                                      >\r\n                                        {(provided, snapshot) => (\r\n                                          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                            <div\r\n                                              ref={provided.innerRef}\r\n                                              style={{\r\n                                                userSelect: \"none\",\r\n                                                padding: 10,\r\n                                                margin: \"0 0 8px 0\",\r\n                                                minHeight: 50,\r\n                                                minWidth: 100,\r\n                                                backgroundColor: \"skyblue\",\r\n                                                color: \"white\",\r\n                                            }}\r\n                                            isDraggingOver={snapshot.isDraggingOver}\r\n                                          >\r\n                      \r\n                                            \r\n                                            </div>\r\n                                              {provided.placeholder}\r\n                                          </div>\r\n                                        )}\r\n                                      </Droppable>\r\n                                  ))}\r\n                                  </div> \r\n                                \r\n                              </div>\r\n                            </div>                                \r\n                          </div>                           \r\n                      </div>\r\n                    ))}\r\n                   \r\n                    </div> \r\n                    \r\n              \r\n                    <div style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n                      {this.state.columnOrder.map(columnId => {\r\n                        const column = this.state.columns[columnId]\r\n                        const statements = column.statementIds.map(\r\n                          (statementId) => this.state.cat1Statements[statementId]\r\n                        )\r\n\r\n                        return (\r\n                          <div\r\n                            style={{\r\n                              margin: 8,\r\n                              border: '1px solid lightgrey',\r\n                              borderRadius: 2,\r\n                              minWidth: 220,\r\n                              textAlign: 'center',\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              padding: 8\r\n                            }}\r\n                          >\r\n                            <h2>{column.title}</h2>\r\n                            <Droppable droppableId={column.id} type='CARD' direction=\"horizontal\">\r\n                              {(provided, snapshot) => (\r\n                                <div\r\n                                  style={{\r\n                                    minWidth: 100,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    padding: 8,\r\n                                    transition: 'background-color 0.2s ease',\r\n                                    backgroundColor: 'skyblue',\r\n                                    flexGrow: 1,\r\n                                    height: 100,\r\n                                    // Add overflow\r\n                                  }}\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.droppableProps}\r\n                                  isDraggingOver={snapshot.isDraggingOver}\r\n                                >\r\n                                  {statements.map((statement, i) => (\r\n                                    <Draggable\r\n                                      key={statement.id}\r\n                                      draggableId={statement.id}\r\n                                      index={i}\r\n                                    >\r\n                                      {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={{\r\n                                            userSelect: \"none\",\r\n                                            padding: 16,\r\n                                            margin: \"0 0 0 8px\",\r\n                                            height: 60,\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#263B4A\"\r\n                                              : \"#456C86\",\r\n                                              color: \"white\",\r\n                                              ...provided.draggableProps.style,\r\n                                              \r\n                                            }}\r\n                                          >\r\n                                          {statement.content}\r\n                                        </div>\r\n                                      )}\r\n                                    </Draggable>\r\n                                  ))}\r\n                                  {provided.placeholder}\r\n                                </div>\r\n                              )}\r\n                            </Droppable>\r\n                          </div>\r\n                        )\r\n                      })}                     \r\n                    </div> */}\r\n                    \r\n                    <div                       \r\n                      style={{\r\n                        margin: 8,\r\n                        border: '1px solid black',\r\n                        borderRadius: 2,\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        padding: 10,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                    {this.state.anchors4.map((item, index) => (\r\n                      <div key={index}>\r\n                        {item.anchors.map((anchor, i) => (\r\n                          <div\r\n                            style={{\r\n                              userSelect: \"none\",\r\n                              padding: 10,\r\n                              margin: \"0 0 8px 0\",\r\n                              minHeight: \"50px\",\r\n                              backgroundColor: 'grey',\r\n                            }}\r\n                          >\r\n                            {anchor.anchorNumber}\r\n                            <div\r\n                              style={{\r\n                                userSelect: \"none\",\r\n                                padding: 10,\r\n                                margin: \"0 0 8px 0\",\r\n                                minHeight: 50,\r\n                                width: 110,\r\n                                backgroundColor: 'lightGrey',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              {anchor.slots.map((slot, index) => (\r\n                                <Droppable\r\n                                  key={slot.id}\r\n                                  droppableId={slot.id}\r\n                                  index={index}\r\n                                  type='SLOT'\r\n                                >\r\n                                {(provided, snapshot) => (\r\n                                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      style={{\r\n                                        userSelect: \"none\",\r\n                                        padding: 10,\r\n                                        margin: \"0 0 8px 0\",\r\n                                        minHeight: 50,\r\n                                        minWidth: 100,\r\n                                        backgroundColor: \"skyblue\",\r\n                                        color: \"white\",\r\n                                      }}\r\n                                      isDraggingOver={snapshot.isDraggingOver}\r\n                                    >\r\n                                    </div>\r\n                                  {provided.placeholder}\r\n                                  </div>\r\n                                )}\r\n                                </Droppable>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                                          \r\n                        {/* This can be wrapped in a div with a title of the category */}\r\n                        {item.cat1.map((statement, j) => (\r\n                          <Droppable\r\n                            key={statement.id}\r\n                            droppableId={statement.id}\r\n                            index={j}\r\n                            type='CARD'\r\n                          >\r\n                            {(provided, snapshot) => (\r\n                              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  style={{\r\n                                    userSelect: \"none\",\r\n                                    padding: 10,\r\n                                    margin: \"0 0 8px 0\",\r\n                                    minHeight: 50,\r\n                                    minWidth: 100,\r\n                                    backgroundColor: \"skyblue\",\r\n                                    color: \"white\",\r\n                                  }}\r\n                                  isDraggingOver={snapshot.isDraggingOver}\r\n                                  {...provided.droppableProps}\r\n                                >\r\n                                  <Draggable\r\n                                      key={statement.id}\r\n                                      draggableId={statement.id}\r\n                                      index={j}\r\n                                    >\r\n                                      {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={{\r\n                                            userSelect: \"none\",\r\n                                            padding: 16,\r\n                                            margin: \"0 0 0 8px\",\r\n                                            height: 60,\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#263B4A\"\r\n                                              : \"#456C86\",\r\n                                              color: \"white\",\r\n                                              ...provided.draggableProps.style,\r\n                                              \r\n                                            }}\r\n                                          >\r\n                                          {statement.content}\r\n                                        </div>\r\n                                      )}\r\n                                    </Draggable>\r\n                                </div>\r\n                              {provided.placeholder}\r\n                              </div>\r\n                            )}\r\n                          </Droppable>\r\n                        ))}\r\n                      </div>\r\n                    ))}  \r\n                    </div>\r\n                    \r\n\r\n                    </DragDropContext>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button onClick={this.next}>\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4_test.js",["291","292","293","294","295","296","297","298","299","300","301","302"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport uuid from 'react-uuid';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  //console.log(result)\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n    return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n  //console.log(destClone)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    //console.log(result)\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst Content = styled.div`\r\n    margin-right: 200px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    display: flex;\r\n    user-select: none;\r\n    padding: 0.5rem;\r\n    margin: 0 0 0.5rem 0;\r\n    align-items: flex-start;\r\n    align-content: flex-start;\r\n    line-height: 1.5;\r\n    border-radius: 3px;\r\n    background: #fff;\r\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\r\n`;\r\n\r\nconst Clone = styled(Item)`\r\n    ~ div {\r\n        transform: none !important;\r\n    }\r\n`;\r\n\r\nconst Handle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    user-select: none;\r\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\r\n    padding: 0.5rem;\r\n    line-height: 1.5;\r\n    border-radius: 3px 0 0 3px;\r\n    background: #fff;\r\n    border-right: 1px solid #ddd;\r\n    color: #000;\r\n`;\r\n\r\nconst List = styled.div`\r\n    border: 1px\r\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\r\n    background: #fff;\r\n    padding: 0.5rem 0.5rem 0;\r\n    border-radius: 3px;\r\n    flex: 0 0 150px;\r\n    font-family: sans-serif;\r\n`;\r\n\r\nconst Kiosk = styled(List)`\r\n    \r\n    width: 200px;\r\n`;\r\n\r\nconst Container = styled(List)`\r\n    margin: 0.5rem 0.5rem 1.5rem;\r\n    background: lightBlue;\r\n    \r\n`;\r\n\r\nconst Notice = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    padding: 0.5rem;\r\n    margin: 0 0.5rem 0.5rem;\r\n    border: 1px solid transparent;\r\n    line-height: 1.5;\r\n    color: #aaa;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    margin: 0.5rem;\r\n    padding: 0.5rem;\r\n    color: #000;\r\n    border: 1px solid #ddd;\r\n    background: #fff;\r\n    border-radius: 3px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ButtonText = styled.div`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst ITEMS = [\r\n    {\r\n        id: '0',\r\n        content: 'Headline'\r\n    },\r\n    {\r\n        id: '1',\r\n        content: 'Copy'\r\n    },\r\n    {\r\n        id: '2',\r\n        content: 'Image'\r\n    },\r\n    {\r\n        id: '3',\r\n        content: 'Slideshow'\r\n    },\r\n    {\r\n        id: '4',\r\n        content: 'Quote'\r\n    }\r\n];\r\n\r\nexport default class Participant_Step4_test extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //[uuid()]: [],\r\n      anchors: [\r\n        { id: 'anchor-1', statements: [] }, { id: 'anchor-2', statements: [] }, { id: 'anchor-3', statements: [] },\r\n      ],\r\n\r\n      anchors2: {\r\n        ['anchor-1']: [],\r\n        ['anchor-2']: [],\r\n        ['anchor-3']: [],\r\n        },\r\n        \r\n        anchors3: [\r\n            { id: '1' },\r\n            { id: '2' }    \r\n        ],\r\n        \r\n        cat1statements: [\r\n            {\r\n                id: '0',\r\n                content: 'Statement 1'\r\n            },\r\n            {\r\n                id: '1',\r\n                content: 'Statement 2'\r\n            },\r\n        ],\r\n\r\n        \r\n      // ],\r\n      // cat2statements: [\r\n      //   {\r\n      //     id: '0',\r\n      //     content: 'Statement 3'\r\n      //   },\r\n      //   {\r\n      //       id: '1',\r\n      //       content: 'Statement 4'\r\n      //   },\r\n        \r\n      // ]\r\n    }\r\n  }\r\n    // state = {\r\n    //   ['0']: [],\r\n    //   ['1']: [],\r\n        \r\n    // };\r\n  componentDidMount() {\r\n   console.log(this.state.anchors2)\r\n  }\r\n\r\n\r\n  onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    console.log(source, destination)\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    };\r\n\r\n    \r\n    //Refactor This switch statement! \r\n    switch (source.droppableId) {\r\n      \r\n      case destination.droppableId:\r\n        const reordered = reorder(\r\n          this.state.anchors2[destination.droppableId],\r\n          source.index,\r\n          destination.index\r\n        )\r\n\r\n        //console.log(reordered)\r\n        // var object = {};\r\n        // var newArray = [];\r\n        // for (var i = 0; i < reordered.length; i++) {\r\n        //   object = { id: reordered[i].id, content: reordered[i].content };\r\n        //   newArray.push(object)\r\n        // };\r\n        // console.log(newArray)\r\n\r\n        var arr = this.state.anchors2[destination.droppableId]\r\n        //arr.splice(0, 1, reordered)\r\n        //this.setState({ anchors2: [...this.state.anchors2[destination.droppableId], reordered ]});\r\n        console.log(arr)\r\n        arr.splice(0, arr.length, reordered)\r\n        console.log(arr)\r\n          // this.setState({\r\n          //   [destination.droppableId]: reorder(\r\n          //     this.state.anchors2[source.droppableId],\r\n          //     source.index,\r\n          //     destination.index\r\n          //   )\r\n          // });\r\n          break;\r\n        \r\n      case 'ITEMS':\r\n            const copied = copy(\r\n                this.state.cat1statements,\r\n                this.state.anchors2[destination.droppableId],\r\n                source,\r\n                destination\r\n            );\r\n            console.log(this.state.anchors2[destination.droppableId]);\r\n            var object = { id: uuid(), content: copied[0].content};\r\n            // for (var i = 0; i < copied.length; i++) {\r\n            //     object = { id: uuid(), content: copied[i].content };\r\n            // };\r\n            \r\n            //Remove selected item from the initiall list\r\n            var copyCat1 = this.state.cat1statements;\r\n            copyCat1.splice(source.index, 1);\r\n            this.setState({ cat1statements: copyCat1 });\r\n            this.state.anchors2[destination.droppableId].unshift(object);\r\n            //this.state.cat1statements.splice(source.index, 1)\r\n            break;\r\n      \r\n      default:\r\n            const moved = move(\r\n                this.state.anchors2[source.droppableId],\r\n                this.state.anchors2[destination.droppableId],\r\n                source,\r\n                destination\r\n            );\r\n            this.setState({ anchors2: moved });\r\n        break;\r\n    }\r\n\r\n  //console.log(this.state.anchors2);\r\n\r\n    \r\n  };\r\n\r\n    addList = e => {\r\n      //this.setState({ [uuid()]: [] });\r\n      //console.log(this.state.anchors2);\r\n    console.log(this.state.cat1statements);\r\n  };\r\n\r\n    render() {\r\n        return (\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div style={{ marginRight: 200 }}>\r\n                    {Object.keys(this.state.anchors2).map((list, i) => (\r\n                        <Droppable\r\n                            key={list}\r\n                            droppableId={list}\r\n                        >\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        style={{\r\n                                            margin: 8,\r\n                                            border: '1px solid black',\r\n                                            borderRadius: 2,\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            padding: 10,\r\n                                            textAlign: 'center'\r\n                                        }}\r\n                                    >\r\n                                    \r\n                                        <div\r\n                                            style={{\r\n                                                background: 'lightGrey',\r\n                                                height: 50,\r\n                                                minWidth: 300\r\n                                            }}\r\n                                            ref={provided.innerRef}\r\n                                            isDraggingOver={snapshot.isDraggingOver}\r\n                                        >\r\n                                        {this.state.anchors2[list].length\r\n                                            ? this.state.anchors2[list].map(\r\n                                              (item, index) => (\r\n                                                  <Draggable\r\n                                                      key={item.id}\r\n                                                      draggableId={item.id}\r\n                                                      index={index}>\r\n                                                      {(provided, snapshot) => (\r\n                                                          <Item\r\n                                                              ref={provided.innerRef}\r\n                                                              {...provided.draggableProps}\r\n                                                              {...provided.dragHandleProps}\r\n                                                              isDragging={snapshot.isDragging}\r\n                                                              style={provided\r\n                                                                      .draggableProps\r\n                                                                      .style\r\n                                                              }>\r\n                                                            \r\n                                                              {item.content}\r\n                                                          </Item>\r\n                                                      )}\r\n                                                  </Draggable>\r\n                                              )\r\n                                          )\r\n                                        : !provided.placeholder && (\r\n                                              <Notice>Drop items here</Notice>\r\n                                          )}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    ))}\r\n                </div>\r\n                \r\n                <div style={{ display: 'flex' }}>\r\n\r\n                <Droppable\r\n                    droppableId=\"ITEMS\"\r\n                    isDropDisabled={true}\r\n                >\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            style={{\r\n                                width: 200,\r\n                                border: '1px solid lightGrey',\r\n                                padding: 10\r\n                            }}\r\n                            ref={provided.innerRef}\r\n                            isDraggingOver={snapshot.isDraggingOver}\r\n                        >\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <h3>Statements category 1</h3>\r\n                            </div>    \r\n                            {this.state.cat1statements.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <React.Fragment>\r\n                                            <Item\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                isDragging={snapshot.isDragging}\r\n                                                style={\r\n                                                    provided.draggableProps\r\n                                                        .style\r\n                                                }>\r\n                                                {item.content}\r\n                                            </Item>\r\n                                            {snapshot.isDragging && (\r\n                                                <Clone>{item.content}</Clone>\r\n                                    )}\r\n                                    \r\n                                        </React.Fragment>\r\n                                    )}\r\n                                    \r\n                                </Draggable>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n              \r\n              </div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\n// Put the things into the DOM!\r\n//ReactDOM.render(<App />, document.getElementById('root'));","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\participant\\Participant_Step4_Second.js",["303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport uuid from 'react-uuid';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n//TODO store admin name and email when creating survey\r\n//TODO add questions before this page \r\n\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n    return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n  //console.log(destClone)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    //console.log(result)\r\n    return result;\r\n};\r\n\r\n\r\nexport default class Participant_Step4_Second extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveyID: '',\r\n      surveyName: '',\r\n        \r\n      category1: '',\r\n      category2: '',\r\n      category3: '',\r\n\r\n      anchors: [],\r\n\r\n      category1List: [],\r\n      category2List: [],\r\n      category3List: [],\r\n\r\n      columnOrder: ['column-1', 'column-2', 'column-3'],\r\n      columns: {\r\n        'column-1': { id: 'column-1', title: localStorage.getItem('CATEGORY1'), statementIds: [] },\r\n        'column-2': { id: 'column-2', title: localStorage.getItem('CATEGORY2'), statementIds: [] },\r\n        'column-3': { id: 'column-3', title: localStorage.getItem('CATEGORY3'), statementIds: [] },\r\n      },\r\n\r\n      cat1Statements: {},\r\n      cat2Statements: {},\r\n      cat3Statements: {},\r\n\r\n      anchors2: [\r\n            { id: '0', anchorNumber: -3, slots: [{ id: '0', statement: [] }] },\r\n            { id: '1', anchorNumber: -2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '2', anchorNumber: -1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '3', anchorNumber: 0, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }, { id: '3', statement: [] }] },\r\n            { id: '4', anchorNumber: 1, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '5', anchorNumber: 2, slots: [{ id: '0', statement: [] }, { id: '1', statement: [] }] },\r\n            { id: '6', anchorNumber: 3, slots: [{ id: '0', statement: [] }] },\r\n          ],\r\n\r\n      statements1: {},\r\n\r\n      anchors3: {\r\n        ['anchor-1']: [],\r\n        ['anchor-2']: [],\r\n        ['anchor-3']: [],\r\n      },\r\n      \r\n\r\n       anchors4: [\r\n        {\r\n          anchors: [\r\n            { id: '0', anchorNumber: -3, slots: [{ id: '0', statement: [] }] },\r\n            { id: '1', anchorNumber: -2, slots: [{ id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '2', anchorNumber: -1, slots: [{ id: '3', statement: [] }, { id: '4', statement: [] }, { id: '5', statement: [] }] },\r\n            { id: '3', anchorNumber: 0, slots: [{ id: '6', statement: [] }, { id: '7', statement: [] }, { id: '8', statement: [] }, { id: '9', statement: [] }] },\r\n            { id: '4', anchorNumber: 1, slots: [{ id: '10', statement: [] }, { id: '11', statement: [] }, { id: '12', statement: [] }] },\r\n            { id: '5', anchorNumber: 2, slots: [{ id: '13', statement: [] }, { id: '14', statement: [] }] },\r\n            { id: '6', anchorNumber: 3, slots: [{ id: '15', statement: [] }] },\r\n          ],\r\n          \r\n          cat1: [\r\n            { id: '16', content: 'Statement 1' },\r\n            { id: '17', content: 'Statement 2' },\r\n          ], \r\n          cat2: [\r\n            { id: '18', content: 'Statement 3' },\r\n            { id: '19', content: 'Statement 4' },\r\n          ],\r\n          cat3: [\r\n            { id: '20', content: 'Statement 5' },\r\n            { id: '21', content: 'Statement 6' },\r\n          ]\r\n\r\n        },\r\n      ],\r\n       \r\n      anchors5: [\r\n            { id: '0', anchorNumber: -3, slots: [{ id: '0', statement: [] }] },\r\n            { id: '1', anchorNumber: -2, slots: [{ id: '1', statement: [] }, { id: '2', statement: [] }] },\r\n            { id: '2', anchorNumber: -1, slots: [{ id: '3', statement: [] }, { id: '4', statement: [] }, { id: '5', statement: [] }] },\r\n            { id: '3', anchorNumber: 0, slots: [{ id: '6', statement: [] }, { id: '7', statement: [] }, { id: '8', statement: [] }, { id: '9', statement: [] }] },\r\n            { id: '4', anchorNumber: 1, slots: [{ id: '10', statement: [] }, { id: '11', statement: [] }, { id: '12', statement: [] }] },\r\n            { id: '5', anchorNumber: 2, slots: [{ id: '13', statement: [] }, { id: '14', statement: [] }] },\r\n            { id: '6', anchorNumber: 3, slots: [{ id: '15', statement: [] }] },  \r\n      ],\r\n      cat1statements2: [\r\n        { id: '0', content: 'Statement 1' },\r\n        { id: '1', content: 'Statement 2' },\r\n        { id: '2', content: 'Statement 3' },\r\n        { id: '3', content: 'Statement 4' },\r\n        { id: '4', content: 'Statement 5' },\r\n        { id: '5', content: 'Statement 6' },\r\n        { id: '6', content: 'Statement 7' },\r\n        { id: '7', content: 'Statement 8' },\r\n        { id: '8', content: 'Statement 9' },\r\n        { id: '9', content: 'Statement 10' },\r\n        { id: '10', content: 'Statement 11' },\r\n      ],\r\n      \r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      surveyName: localStorage.getItem('SURVEY_NAME'),\r\n      surveyID: localStorage.getItem('SURVEY_ID'),\r\n      category1: localStorage.getItem('CATEGORY1'),\r\n      category2: localStorage.getItem('CATEGORY2'),\r\n      category3: localStorage.getItem('CATEGORY3')\r\n    });\r\n\r\n    this.getAnchors();  \r\n\r\n    const i = this.state.anchors4.map((item, i) => {\r\n      {\r\n        item.anchors.map((anchor, j) => {\r\n          {\r\n            anchor.slots.map((slot, k) => {\r\n              console.log(slot.id)\r\n          })}\r\n      })}\r\n    })\r\n\r\n  };\r\n\r\n  getAnchors(e){\r\n    //e.preventDefault()\r\n\r\n    var surveyID = localStorage.getItem('SURVEY_ID');\r\n    var anchorsArr3 = [];\r\n    var numberOfSlots = [];\r\n    var arr = [];\r\n    var cat1Items = [];\r\n    var cat2Items = [];\r\n    var cat3Items = [];\r\n\r\n\r\n      fetch(\"https://auto-q-survey-web.herokuapp.com/api/getAnchors\", {\r\n\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          surveyID: surveyID,\r\n        })\r\n      })\r\n        .then(res => {\r\n          return res.json()\r\n        })\r\n        .then((data) => {\r\n          //Sort the data first\r\n          \r\n          for (var i = 0; i < data.length; i++) {\r\n            arr.push(data[i].anchor)\r\n            numberOfSlots = data[i].slots\r\n            //Create and array of objects for each anchor\r\n            //the number of objects is specified in the data[i].slots \r\n            //push it to\r\n            for (var array = [], j = 0; j < numberOfSlots; j++) {\r\n              array.push({ id: j.toString() });\r\n            }\r\n            anchorsArr3.push({ id: i.toString(), anchorNumber: data[i].anchor, slots: array });\r\n            \r\n          };\r\n           //Get statements for category 1\r\n            var statements = localStorage.getItem('CATEGORY1_STATEMENTS')\r\n            var statementsCat1 = JSON.parse(statements)\r\n            //console.log(statementsCat1)\r\n            //this.setState({ category1List : statementsCat1 })\r\n            \r\n            \r\n            for (var i = 0; i < statementsCat1.length; i++){\r\n              cat1Items.push({ id: i.toString(), content: statementsCat1[i].content });\r\n\r\n              this.setState(prevState => ({\r\n                cat1Statements: { ...prevState.cat1Statements, ...cat1Items }\r\n              }));\r\n\r\n              var keys = Object.keys(this.state.cat1Statements);\r\n              for (var j = 0; j < keys.length; j++){\r\n                if (!(keys[j] in this.state.columns['column-1'].statementIds)) {\r\n                  this.state.columns['column-1'].statementIds.push(keys[j])\r\n                }\r\n              };\r\n          };  \r\n          \r\n          //console.log(this.state.cat1Statements)\r\n\r\n          this.sort('anchorNumber', anchorsArr3)\r\n          this.setState({ anchors: anchorsArr3 });\r\n          //this.state.anchors.push({category1: categories})\r\n          console.log(this.state.cat1Statements);\r\n          //console.log(this.state.columns)\r\n          console.log(this.state.anchors2)\r\n          \r\n        })\r\n      .catch(error => console.log(error));\r\n    \r\n   \r\n  };\r\n\r\n  sort = function (prop, arr) {\r\n    prop = prop.split('.');\r\n    var len = prop.length;\r\n              \r\n    arr.sort(function (a, b) {\r\n      var i = 0;\r\n        while( i < len ) {\r\n          a = a[prop[i]];\r\n          b = b[prop[i]];\r\n          i++;\r\n        }\r\n      if (a < b) {\r\n        return -1;\r\n      }\r\n      else if (a > b) {\r\n        return 1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  // onDragEnd = (result) => {\r\n\r\n  //   const { destination, source, draggableId } = result\r\n  //     console.log(this.state.anchors2)\r\n  //     console.log(this.state.columns)\r\n\r\n  //   //If card is dropped outside any column then return the card to the previous column\r\n  //   if (!destination) { return };\r\n\r\n  //   if ( destination.droppableId === source.droppableId &&\r\n  //         destination.index === source.index) {\r\n  //     return\r\n  //   }\r\n\r\n  //   const start = this.state.columns[source.droppableId]\r\n  //   const finish = this.state.columns[destination.droppableId]\r\n\r\n  //   if (start === finish) {\r\n  //     const newStatementIds = Array.from(start.statementIds)\r\n  //     newStatementIds.splice(source.index, 1)\r\n  //     newStatementIds.splice(destination.index, 0, draggableId)\r\n\r\n  //     const newColumn = {\r\n  //       ...start,\r\n  //       statementIds: newStatementIds\r\n  //     }\r\n\r\n  //     const newState = {\r\n  //       ...this.state,\r\n  //       columns: {\r\n  //         ...this.state.columns,\r\n  //         [newColumn.id]: newColumn\r\n  //       }\r\n  //     }\r\n\r\n  //     this.setState(newState)\r\n  //     return\r\n  //   }\r\n\r\n  //   // Moving from one list to another\r\n  //   const startStatementIds = Array.from(start.statementIds)\r\n  //   startStatementIds.splice(source.index, 1)\r\n  //   const newStart = {\r\n  //     ...start,\r\n  //     statementIds: startStatementIds\r\n  //   }\r\n\r\n  //   const finishStatementIds = Array.from(finish.statementIds)\r\n  //   finishStatementIds.splice(destination.index, 0, draggableId)\r\n  //   const newFinish = {\r\n  //     ...finish,\r\n  //     statementIds: finishStatementIds\r\n  //   }\r\n\r\n  //   const newState = {\r\n  //     ...this.state,\r\n  //     columns: {\r\n  //       ...this.state.columns,\r\n  //       [newStart.id]: newStart,\r\n  //       [newFinish.id]: newFinish\r\n  //     }\r\n  //   }\r\n\r\n    \r\n  //   this.setState(newState)\r\n  // };\r\n\r\n  //   onDragEnd(result) {\r\n  //   // dropped outside the list\r\n  //   console.log(result);\r\n  //   console.log(\"innner drag\");\r\n  //   if (!result.destination) {\r\n  //     return;\r\n  //   }\r\n  //   const sourceIndex = result.source.index;\r\n  //   const destIndex = result.destination.index;\r\n  //   if (result.type === \"droppableItem\") {\r\n  //     const items = reorder(this.state.items, sourceIndex, destIndex);\r\n\r\n  //     this.setState({\r\n  //       items\r\n  //     });\r\n  //   } else if (result.type === \"droppableSubItem\") {\r\n  //     const itemSubItemMap = this.state.items.reduce((acc, item) => {\r\n  //       acc[item.id] = item.subItems;\r\n  //       return acc;\r\n  //     }, {});\r\n\r\n  //     const sourceParentId = parseInt(result.source.droppableId);\r\n  //     const destParentId = parseInt(result.destination.droppableId);\r\n\r\n  //     const sourceSubItems = itemSubItemMap[sourceParentId];\r\n  //     const destSubItems = itemSubItemMap[destParentId];\r\n\r\n  //     let newItems = [...this.state.items];\r\n\r\n  //     /** In this case subItems are reOrdered inside same Parent */\r\n  //     if (sourceParentId === destParentId) {\r\n  //       const reorderedSubItems = reorder(\r\n  //         sourceSubItems,\r\n  //         sourceIndex,\r\n  //         destIndex\r\n  //       );\r\n  //       newItems = newItems.map(item => {\r\n  //         if (item.id === sourceParentId) {\r\n  //           item.subItems = reorderedSubItems;\r\n  //         }\r\n  //         return item;\r\n  //       });\r\n  //       this.setState({\r\n  //         items: newItems\r\n  //       });\r\n  //     } else {\r\n  //       let newSourceSubItems = [...sourceSubItems];\r\n  //       const [draggedItem] = newSourceSubItems.splice(sourceIndex, 1);\r\n\r\n  //       let newDestSubItems = [...destSubItems];\r\n  //       newDestSubItems.splice(destIndex, 0, draggedItem);\r\n  //       newItems = newItems.map(item => {\r\n  //         if (item.id === sourceParentId) {\r\n  //           item.subItems = newSourceSubItems;\r\n  //         } else if (item.id === destParentId) {\r\n  //           item.subItems = newDestSubItems;\r\n  //         }\r\n  //         return item;\r\n  //       });\r\n  //       this.setState({\r\n  //         items: newItems\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    console.log(source, destination)\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    };\r\n\r\n    //Find the index of anchors5 object and slots given the destinarion only\r\n    var slotPosition;\r\n    var destinationSlot;\r\n    this.state.anchors5.map((anchor, index) => {\r\n      anchor.slots.map((slot, i) => {\r\n        if (slot.id == destination.droppableId) {\r\n          slotPosition = i;\r\n          destinationSlot = slot\r\n        };\r\n      });\r\n    });\r\n\r\n    var sourceSlotPostion;\r\n    var sourceSlot;\r\n    this.state.anchors5.map((anchor, index) => {\r\n      anchor.slots.map((slot, i) => {\r\n        if (slot.id == source.droppableId) {\r\n          sourceSlotPostion = i;\r\n          sourceSlot = slot.statement\r\n        }\r\n      })\r\n    })\r\n    \r\n    //console.log(sourceSlot)\r\n    \r\n    switch (source.droppableId) {\r\n      case 'ITEMS':\r\n        const copied = copy(\r\n          this.state.cat1statements2,\r\n          destinationSlot.statement,\r\n          source,\r\n          destination\r\n        );\r\n        //Remove selected statement from the array\r\n        var copyCat1 = this.state.cat1statements2;\r\n        copyCat1.splice(source.index, 1);\r\n        this.setState({ cat1statements2: copyCat1 });\r\n        //push selected statement onto the selected slot\r\n        destinationSlot.statement.push({ id:copied[0].id, content: copied[0].content });\r\n      \r\n        break;\r\n      default:\r\n        const moved = move(\r\n          sourceSlot,\r\n          destinationSlot.statement,\r\n          source,\r\n          destination\r\n        );\r\n        console.log(sourceSlot)\r\n        console.log(destinationSlot.statement)\r\n        console.log(source)\r\n        console.log(destination)\r\n        \r\n    }\r\n  };\r\n\r\n  render() {\r\n        return (\r\n\r\n            <div>\r\n            <div className='grid-container'>\r\n              <div className=\"item1 sub-header-container\">\r\n                <h1 className=\"sub-heading\">\r\n                  Q-Sort - Step 2\r\n                </h1>\r\n              </div>\r\n              <div className=' item6 navbar-container'>\r\n                <Navbar/>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className='center-2'>\r\n              <p className='headings'>Survey Name</p>  \r\n              <p className='survey-name'>{this.state.surveyName}</p>\r\n\r\n              <div style={{ display: 'flex', justifyContent: \"center\" }}> \r\n                <div>  \r\n                  <DragDropContext onDragEnd={this.onDragEnd}>    \r\n                    <div\r\n                      style={{\r\n                        border: '1px solid black',\r\n                        padding: 10,\r\n                        display: 'flex',\r\n                        textAlign: 'center',\r\n                        flexDirection: 'row',\r\n                      }}\r\n                    >\r\n                        {this.state.anchors5.map((list, i) => (\r\n                          <div\r\n                            key={list.id}\r\n                            index={i}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                border: '1px solid black',\r\n                                borderRadius: 2,\r\n                                display: 'flex',\r\n                                justifyContent: \"center\",\r\n                                alignItems: 'center',\r\n                                padding: 10,\r\n                                textAlign: 'center',\r\n                                margin: \"0 0 8px 0\",\r\n                                padding: 10\r\n                              }}\r\n                            >        \r\n                              <div\r\n                                style={{\r\n                                  background: 'lightGrey',\r\n                                  display: 'flex',\r\n                                  flexDirection: 'column',\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: 'center',\r\n                                  padding: 10\r\n                                }}\r\n                              >\r\n                                {list.anchorNumber}\r\n                                {list.slots.map((slot, j) => (\r\n                                  <Droppable\r\n                                    key={slot.id}\r\n                                    droppableId={slot.id}\r\n                                    index={j}\r\n                                  >\r\n                                    {(provided, snapshot) => (\r\n                                      <div\r\n                                        style={{\r\n                                          border: '1px solid black',\r\n                                          height: 80,\r\n                                          width: 100,\r\n                                          background: snapshot.isDraggingOver\r\n                                          ? \"lightCoral\"\r\n                                          : \"lightgreen\",\r\n                                          margin: \"0 0 8px 0\",\r\n                                        }}\r\n                                      >\r\n                                        <div\r\n                                          ref={provided.innerRef}\r\n                                          isDraggingOver={snapshot.isDraggingOver}\r\n                                        >\r\n                                          {slot.statement.map((item, k) => (\r\n                                            <Draggable\r\n                                              key={item.id}\r\n                                              draggableId={item.id}\r\n                                              index={k}\r\n                                            >\r\n                                              {(provided, snapshot) => ( \r\n                                                <div\r\n                                                  ref={provided.innerRef}\r\n                                                  {...provided.draggableProps}\r\n                                                  {...provided.dragHandleProps}\r\n                                                  isDragging={snapshot.isDragging}\r\n                                                  style={{\r\n                                                    userSelect: \"none\",\r\n                                                    padding: 8,\r\n                                                    margin: \"0 0 0 8px\",\r\n                                                    height: 60,\r\n                                                    width: 100,\r\n                                                    backgroundColor: 'lightsalmon',\r\n                                                    color: \"white\",\r\n                                                    textAlign:'center',\r\n                                                    ...provided.draggableProps.style,\r\n                                                  }}\r\n                                                >\r\n                                                  {item.content}\r\n                                                </div>  \r\n                                              )}\r\n                                            </Draggable>\r\n                                            // <div key={k}>\r\n                                            //   {item.content}\r\n                                            // </div>\r\n                                          ))}\r\n\r\n                                        </div>\r\n                                      </div>\r\n                                    )}    \r\n                                  </Droppable>\r\n                                ))}     \r\n                              </div>\r\n                              </div>\r\n                          </div>    \r\n                        ))}\r\n                    </div>\r\n                    \r\n                    <div style={{display:'flex', justifyContent: \"center\", flexDirection: 'column'}}>\r\n                      <Droppable\r\n                        droppableId=\"ITEMS\"\r\n                        // isDropDisabled={true}\r\n                        direction={\"horizontal\"}\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            style={{\r\n                              border: '1px solid lightGrey',\r\n                              padding: 10,\r\n                              width: 1000,\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                            }}\r\n                            ref={provided.innerRef}\r\n                            isDraggingOver={snapshot.isDraggingOver}\r\n                          >\r\n                            <div style={{ textAlign: 'center' }}>\r\n                              <h3>Statements category 1</h3>\r\n                            </div>\r\n                            <div\r\n                              style={{\r\n                                border: '1px solid black',\r\n                                padding: 10,\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                width: 1010,\r\n                                overflowX: 'auto',\r\n                                margin: \"0 0 0 20px\",\r\n                              }}\r\n                            >\r\n                              {this.state.cat1statements2.map((statement2, index) => (\r\n                                <Draggable\r\n                                  key={statement2.id}\r\n                                  draggableId={statement2.id}\r\n                                  index={index}\r\n                                >\r\n                                  {(provided, snapshot) => ( \r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      isDragging={snapshot.isDragging}\r\n                                      style={{\r\n                                        userSelect: \"none\",\r\n                                        padding: 8,\r\n                                        margin: \"0 0 0 8px\",\r\n                                        height: 60,\r\n                                        width: 100,\r\n                                        backgroundColor: 'lightsalmon',\r\n                                        color: \"white\",\r\n                                        textAlign:'center',\r\n                                        ...provided.draggableProps.style,\r\n                                      }}\r\n                                    >\r\n                                      {statement2.content}\r\n                                    </div>  \r\n                                  )}\r\n                                </Draggable>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                    \r\n                    \r\n\r\n                    </DragDropContext>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button onClick={this.next}>\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\1Uni\\4th year\\Honours\\workspace6\\auto-q-survey-web\\client\\src\\pages\\Admin_Home.js",["330","331"],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"340","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":15},{"ruleId":"332","replacedBy":"341"},{"ruleId":"334","replacedBy":"342"},{"ruleId":"336","severity":1,"message":"337","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"340","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":15},{"ruleId":"332","replacedBy":"343"},{"ruleId":"334","replacedBy":"344"},{"ruleId":"336","severity":1,"message":"345","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":20},{"ruleId":"336","severity":1,"message":"346","line":95,"column":7,"nodeType":"338","messageId":"339","endLine":95,"endColumn":27},{"ruleId":"336","severity":1,"message":"347","line":109,"column":7,"nodeType":"338","messageId":"339","endLine":109,"endColumn":24},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":59,"column":37,"nodeType":"351","messageId":"352","endLine":59,"endColumn":39},{"ruleId":"336","severity":1,"message":"340","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":15},{"ruleId":"336","severity":1,"message":"353","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":15},{"ruleId":"336","severity":1,"message":"354","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":68,"column":32,"nodeType":"351","messageId":"352","endLine":68,"endColumn":34},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":80,"column":9,"nodeType":"357","endLine":80,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":89,"column":9,"nodeType":"357","endLine":89,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":91,"column":9,"nodeType":"357","endLine":91,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":100,"column":9,"nodeType":"357","endLine":100,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":104,"column":9,"nodeType":"357","endLine":104,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":114,"column":9,"nodeType":"357","endLine":114,"endColumn":40},{"ruleId":"355","severity":1,"message":"356","line":118,"column":9,"nodeType":"357","endLine":118,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":134,"column":9,"nodeType":"357","endLine":134,"endColumn":36},{"ruleId":"355","severity":1,"message":"356","line":140,"column":9,"nodeType":"357","endLine":140,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":157,"column":9,"nodeType":"357","endLine":157,"endColumn":35},{"ruleId":"355","severity":1,"message":"356","line":163,"column":9,"nodeType":"357","endLine":163,"endColumn":19},{"ruleId":"358","severity":1,"message":"359","line":186,"column":13,"nodeType":"338","messageId":"360","endLine":186,"endColumn":14},{"ruleId":"358","severity":1,"message":"361","line":188,"column":17,"nodeType":"338","messageId":"360","endLine":188,"endColumn":29},{"ruleId":"358","severity":1,"message":"362","line":189,"column":17,"nodeType":"338","messageId":"360","endLine":189,"endColumn":30},{"ruleId":"358","severity":1,"message":"359","line":195,"column":13,"nodeType":"338","messageId":"360","endLine":195,"endColumn":14},{"ruleId":"358","severity":1,"message":"361","line":197,"column":17,"nodeType":"338","messageId":"360","endLine":197,"endColumn":29},{"ruleId":"358","severity":1,"message":"362","line":198,"column":17,"nodeType":"338","messageId":"360","endLine":198,"endColumn":30},{"ruleId":"363","severity":1,"message":"364","line":228,"column":13,"nodeType":"365","messageId":"366","endLine":228,"endColumn":51},{"ruleId":"336","severity":1,"message":"367","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":22},{"ruleId":"336","severity":1,"message":"368","line":4,"column":24,"nodeType":"338","messageId":"339","endLine":4,"endColumn":34},{"ruleId":"336","severity":1,"message":"369","line":38,"column":13,"nodeType":"338","messageId":"339","endLine":38,"endColumn":18},{"ruleId":"349","severity":1,"message":"370","line":45,"column":36,"nodeType":"351","messageId":"352","endLine":45,"endColumn":38},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":37,"column":9,"nodeType":"357","endLine":37,"endColumn":34},{"ruleId":"336","severity":1,"message":"371","line":45,"column":13,"nodeType":"338","messageId":"339","endLine":45,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":72,"column":13,"nodeType":"365","messageId":"366","endLine":72,"endColumn":51},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"336","severity":1,"message":"371","line":43,"column":13,"nodeType":"338","messageId":"339","endLine":43,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":70,"column":13,"nodeType":"365","messageId":"366","endLine":70,"endColumn":51},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":55,"column":13,"nodeType":"365","messageId":"366","endLine":55,"endColumn":51},{"ruleId":"336","severity":1,"message":"354","line":2,"column":16,"nodeType":"338","messageId":"339","endLine":2,"endColumn":24},{"ruleId":"336","severity":1,"message":"372","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":24},{"ruleId":"336","severity":1,"message":"373","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"354","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"336","severity":1,"message":"373","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"354","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"336","severity":1,"message":"348","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":14},{"ruleId":"336","severity":1,"message":"340","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":15},{"ruleId":"336","severity":1,"message":"373","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"348","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":14},{"ruleId":"336","severity":1,"message":"374","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":12},{"ruleId":"336","severity":1,"message":"375","line":12,"column":7,"nodeType":"338","messageId":"339","endLine":12,"endColumn":14},{"ruleId":"336","severity":1,"message":"376","line":25,"column":7,"nodeType":"338","messageId":"339","endLine":25,"endColumn":11},{"ruleId":"336","severity":1,"message":"377","line":141,"column":9,"nodeType":"338","messageId":"339","endLine":141,"endColumn":20},{"ruleId":"358","severity":1,"message":"378","line":305,"column":9,"nodeType":"338","messageId":"360","endLine":305,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":306,"column":14,"nodeType":"338","messageId":"360","endLine":306,"endColumn":15},{"ruleId":"358","severity":1,"message":"379","line":308,"column":13,"nodeType":"338","messageId":"360","endLine":308,"endColumn":15},{"ruleId":"358","severity":1,"message":"378","line":314,"column":9,"nodeType":"338","messageId":"360","endLine":314,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":315,"column":14,"nodeType":"338","messageId":"360","endLine":315,"endColumn":15},{"ruleId":"358","severity":1,"message":"379","line":317,"column":13,"nodeType":"338","messageId":"360","endLine":317,"endColumn":15},{"ruleId":"336","severity":1,"message":"373","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"348","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":14},{"ruleId":"336","severity":1,"message":"354","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"380","severity":1,"message":"381","line":76,"column":9,"nodeType":"382","messageId":"383","endLine":76,"endColumn":25,"fix":"384"},{"ruleId":"380","severity":1,"message":"385","line":77,"column":9,"nodeType":"382","messageId":"383","endLine":77,"endColumn":25,"fix":"386"},{"ruleId":"380","severity":1,"message":"387","line":78,"column":9,"nodeType":"382","messageId":"383","endLine":78,"endColumn":25,"fix":"388"},{"ruleId":"336","severity":1,"message":"389","line":144,"column":9,"nodeType":"338","messageId":"339","endLine":144,"endColumn":18},{"ruleId":"336","severity":1,"message":"390","line":145,"column":9,"nodeType":"338","messageId":"339","endLine":145,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":183,"column":22,"nodeType":"338","messageId":"360","endLine":183,"endColumn":23},{"ruleId":"358","severity":1,"message":"391","line":191,"column":24,"nodeType":"338","messageId":"360","endLine":191,"endColumn":25},{"ruleId":"336","severity":1,"message":"392","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":16},{"ruleId":"336","severity":1,"message":"393","line":42,"column":7,"nodeType":"338","messageId":"339","endLine":42,"endColumn":11},{"ruleId":"336","severity":1,"message":"394","line":44,"column":7,"nodeType":"338","messageId":"339","endLine":44,"endColumn":14},{"ruleId":"336","severity":1,"message":"395","line":67,"column":7,"nodeType":"338","messageId":"339","endLine":67,"endColumn":13},{"ruleId":"336","severity":1,"message":"396","line":91,"column":7,"nodeType":"338","messageId":"339","endLine":91,"endColumn":12},{"ruleId":"336","severity":1,"message":"397","line":96,"column":7,"nodeType":"338","messageId":"339","endLine":96,"endColumn":16},{"ruleId":"336","severity":1,"message":"398","line":114,"column":7,"nodeType":"338","messageId":"339","endLine":114,"endColumn":13},{"ruleId":"336","severity":1,"message":"399","line":129,"column":7,"nodeType":"338","messageId":"339","endLine":129,"endColumn":17},{"ruleId":"336","severity":1,"message":"400","line":133,"column":7,"nodeType":"338","messageId":"339","endLine":133,"endColumn":12},{"ruleId":"380","severity":1,"message":"381","line":166,"column":9,"nodeType":"382","messageId":"383","endLine":166,"endColumn":25,"fix":"401"},{"ruleId":"380","severity":1,"message":"385","line":167,"column":9,"nodeType":"382","messageId":"383","endLine":167,"endColumn":25,"fix":"402"},{"ruleId":"380","severity":1,"message":"387","line":168,"column":9,"nodeType":"382","messageId":"383","endLine":168,"endColumn":25,"fix":"403"},{"ruleId":"336","severity":1,"message":"373","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"348","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":14},{"ruleId":"336","severity":1,"message":"354","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"336","severity":1,"message":"374","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":12},{"ruleId":"380","severity":1,"message":"381","line":76,"column":9,"nodeType":"382","messageId":"383","endLine":76,"endColumn":25,"fix":"404"},{"ruleId":"380","severity":1,"message":"385","line":77,"column":9,"nodeType":"382","messageId":"383","endLine":77,"endColumn":25,"fix":"405"},{"ruleId":"380","severity":1,"message":"387","line":78,"column":9,"nodeType":"382","messageId":"383","endLine":78,"endColumn":25,"fix":"406"},{"ruleId":"336","severity":1,"message":"407","line":147,"column":11,"nodeType":"338","messageId":"339","endLine":147,"endColumn":12},{"ruleId":"408","severity":1,"message":"409","line":147,"column":49,"nodeType":"410","messageId":"411","endLine":147,"endColumn":51},{"ruleId":"363","severity":1,"message":"364","line":148,"column":7,"nodeType":"365","messageId":"366","endLine":154,"endColumn":10},{"ruleId":"408","severity":1,"message":"409","line":149,"column":38,"nodeType":"410","messageId":"411","endLine":149,"endColumn":40},{"ruleId":"363","severity":1,"message":"364","line":150,"column":11,"nodeType":"365","messageId":"366","endLine":153,"endColumn":14},{"ruleId":"408","severity":1,"message":"409","line":151,"column":40,"nodeType":"410","messageId":"411","endLine":151,"endColumn":42},{"ruleId":"336","severity":1,"message":"389","line":167,"column":9,"nodeType":"338","messageId":"339","endLine":167,"endColumn":18},{"ruleId":"336","severity":1,"message":"390","line":168,"column":9,"nodeType":"338","messageId":"339","endLine":168,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":206,"column":22,"nodeType":"338","messageId":"360","endLine":206,"endColumn":23},{"ruleId":"358","severity":1,"message":"391","line":214,"column":24,"nodeType":"338","messageId":"360","endLine":214,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":404,"column":45,"nodeType":"410","messageId":"411","endLine":404,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":405,"column":34,"nodeType":"410","messageId":"411","endLine":405,"endColumn":36},{"ruleId":"349","severity":1,"message":"350","line":406,"column":21,"nodeType":"351","messageId":"352","endLine":406,"endColumn":23},{"ruleId":"336","severity":1,"message":"412","line":407,"column":11,"nodeType":"338","messageId":"339","endLine":407,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":415,"column":45,"nodeType":"410","messageId":"411","endLine":415,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":416,"column":34,"nodeType":"410","messageId":"411","endLine":416,"endColumn":36},{"ruleId":"349","severity":1,"message":"350","line":417,"column":21,"nodeType":"351","messageId":"352","endLine":417,"endColumn":23},{"ruleId":"336","severity":1,"message":"413","line":418,"column":11,"nodeType":"338","messageId":"339","endLine":418,"endColumn":28},{"ruleId":"336","severity":1,"message":"414","line":443,"column":15,"nodeType":"338","messageId":"339","endLine":443,"endColumn":20},{"ruleId":"415","severity":1,"message":"416","line":505,"column":33,"nodeType":"417","messageId":"352","endLine":505,"endColumn":40},{"ruleId":"336","severity":1,"message":"340","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":15},{"ruleId":"336","severity":1,"message":"353","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":15},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"no-unused-vars","'register' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.",["418"],["419"],["418"],["419"],"'MyProvider' is defined but never used.","'ProtectedParticipant' is assigned a value but never used.","'ProtectedNextPage' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'login' is defined but never used.","'Redirect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'i' is already defined.","redeclared","'anchorNumber' is already defined.","'numberOfSlots' is already defined.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'createAnchor' is defined but never used.","'getSurveys' is defined but never used.","'match' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'statementsArray' is assigned a value but never used.","'createQuestion' is defined but never used.","'jwt_decode' is defined but never used.","'uuid' is defined but never used.","'reorder' is assigned a value but never used.","'move' is assigned a value but never used.","'statementId' is assigned a value but never used.","'keys' is already defined.","'id' is already defined.","no-useless-computed-key","Unnecessarily computed property ['anchor-1'] found.","Property","unnecessarilyComputedProperty",{"range":"420","text":"421"},"Unnecessarily computed property ['anchor-2'] found.",{"range":"422","text":"423"},"Unnecessarily computed property ['anchor-3'] found.",{"range":"424","text":"425"},"'cat2Items' is assigned a value but never used.","'cat3Items' is assigned a value but never used.","'j' is already defined.","'ReactDOM' is defined but never used.","'grid' is assigned a value but never used.","'Content' is assigned a value but never used.","'Handle' is assigned a value but never used.","'Kiosk' is assigned a value but never used.","'Container' is assigned a value but never used.","'Button' is assigned a value but never used.","'ButtonText' is assigned a value but never used.","'ITEMS' is assigned a value but never used.",{"range":"426","text":"421"},{"range":"427","text":"423"},{"range":"428","text":"425"},{"range":"429","text":"421"},{"range":"430","text":"423"},{"range":"431","text":"425"},"'i' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'slotPosition' is assigned a value but never used.","'sourceSlotPostion' is assigned a value but never used.","'moved' is assigned a value but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","no-global-assign","no-unsafe-negation",[2967,2979],"'anchor-1'",[2994,3006],"'anchor-2'",[3021,3033],"'anchor-3'",[3998,4010],[4025,4037],[4052,4064],[2974,2986],[3001,3013],[3028,3040]]